{"version":3,"sources":["components/User/Category/Category.js","api/api.js","api/data.js","components/Navbar/Navbar.js","components/User/Home/Home.js","images/bg.jpg","components/DemoFlashcard/DemoFlashcard.js","components/Guest/LandingPage/LandingPage.js","images/register-bg.jpg","helpers/notification.js","services/authService.js","helpers/validator.js","components/User/Register/Register.js","images/login-bg.jpg","contexts/AuthContext.js","components/User/Login/Login.js","components/Backdrop/Backdrop.js","components/Modal/Modal.js","services/cardService.js","components/User/Profile/Profile.js","components/User/Flashcard/Flashcard.js","components/FlashcardList/FlashcardList.js","components/PaginationElement/PaginationElement.js","components/Loader/Loader.js","components/Collections/Collections.js","components/FlashcardsBasic/FlashcardsBasic.js","components/FlashcardsAdvanced/FlashcardsAdvanced.js","components/FlashcardsWeb/FlashcardsWeb.js","components/Owner/Edit/Edit.js","images/create.png","components/Owner/Create/Create.js","components/Owner/OwnerFlashcard/OwnerFlashcard.js","components/Owner/OwnerFlashcardList/OwnerFlashcardList.js","components/Owner/MyCards/MyCards.js","components/User/Practice/Practice.js","components/User/Details/Details.js","components/Owner/OwnerDetails/OwnerDetails.js","components/Footer/Footer.js","components/NotFoundPage/NotFoundPage.js","helpers/PrivateRoutes.js","App.js","index.js"],"names":["Category","id","className","name","to","alt","a","Parse","User","logOut","localStorage","removeItem","error","alert","console","serverURL","initialize","logout","Navbar","userId","getItem","isLogged","navigate","useNavigate","pathname","useLocation","splitLocation","split","replace","log","message","end","onClick","onLogout","Home","user","spy","smooth","duration","Flashcard","questionElement","answerElement","cover","details","LandingPage","link","style","backgroundImage","background","notification","title","store","addNotification","type","insert","container","animationIn","animationOut","dismiss","onScreen","login","username","password","logIn","email","get","currentUser","current","sessionToken","getSessionToken","setItem","register","set","signUp","isAuthenticated","Boolean","onDelete","query","Query","destroy","response","getUserImage","refreshImage","imgElement","imgURL","queryString","Date","getTime","currentUserImage","src","undefined","_url","url","validateInput","repass","String","chars","toString","digits","isInvSymbol","hasDigits","i","length","Number","isInteger","j","currChar","charCodeAt","cleanedUser","usernamePattern","test","found","match","authService","Register","useState","setUsername","setEmail","setPassword","rePass","setRePass","navigation","e","preventDefault","data","onSubmit","registerUser","autoComplete","value","onChange","target","pattern","registerBackground","AuthContext","createContext","initialState","authToken","AuthProvider","children","setUser","Provider","useAuth","useContext","Login","setError","Object","fromEntries","FormData","currentTarget","result","loginUser","loginBackground","Backdrop","props","Modal","text","onClose","getCard","extend","equalTo","find","results","object","category","question","answer","owner","currentCard","create","newFlashcard","add","save","onEdit","questionEdit","answerEdit","categoryEdit","updateCardDetails","currentOwner","updatedCard","getMyCards","ascending","myCards","cards","JSON","parse","stringify","objectId","push","deleteCard","cardIds","practiceList","card","includes","checkIfInPracticeList","ownerId","check","removeCardFromPractice","index","indexOf","splice","window","location","reload","getName","nameResult","countMyCards","getUserLevel","level","attributes","userLevel","contribution","createdAt","created","date","slice","getWebCards","finalArray","webCards","containedIn","getBasicsCards","basicsCards","getAdvancedCards","advancedCards","filterCards","filteredCards","getPracticeList","list","array","entries","queryResult","getAllCards","Profile","showModal","setShowModal","count","setCount","setLevel","setCreated","image","setImage","closeModalHandler","reader","FileReader","readAsDataURL","size","onload","event","img","Image","el","elem","document","createElement","width","height","ctx","getContext","drawImage","srcEncoded","canvas","toDataURL","file","File","base64","files","useEffect","cardService","res","currentLevel","fetchData","saveImage","htmlFor","handleProfileImage","accept","visibility","onError","display","class","flashcard","ownerName","setOwnerName","useParams","state","FlashcardList","flashcards","scrollTo","navData","isActive","map","PaginationElement","cardsPerPage","totalCards","paginate","currentPageName","previousPage","nextPage","pageNumbers","Math","ceil","number","loader","loading","color","viewBox","xmlns","xmlnsXlink","x1","y1","x2","y2","offset","fill","attributeName","dur","repeatCount","values","Collections","all","setAll","setLoading","currentPage","setCurrentPage","href","setTimeout","fetchAdData","indexOfLastCard","indexOfFirstCard","currentCards","totalPages","pageNumber","previous","FlashcardsBasic","basics","setBasicsCards","FlashcardsAdvanced","advanced","setAdvancedCards","FlashcardsWeb","web","setWebCards","options","Edit","validate","setValidate","setQuestionEdit","setAnswerEdit","setCategoryEdit","then","fieldValidation","currentField","defaultValue","x","placeholder","onBlur","borderColor","Create","formData","onCreate","levelPicture","OwnerFlashcard","ownerFlashcard","OwnerFlashcardList","MyCards","setCards","setFilteredCards","isFiltered","setIsFiltered","categoryName","fetchWebData","filtered","onFilter","Practice","practiceCards","setPracticeCards","Details","currentQuestion","setCurrentQuestion","currentAnswer","setCurrentAnswer","setCurrentOwner","currentCategory","setCurrentCategory","setCheck","setAdd","localStorageOwnerId","currentCardOwnerId","ownerElement","userElement","OwnerDetails","Footer","rel","NotFoundPage","PrivateRoute","App","path","element","PrivateRoutes","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7412c559.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Category.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Category() {\r\n  return (\r\n    <div id=\"categories\" className=\"category-container\">\r\n\r\n      <div className=\"category-card\">\r\n        <div className=\"category-icon\">\r\n          <ion-icon name=\"logo-javascript\"></ion-icon>\r\n        </div>\r\n        <div className=\"category-content\">\r\n          <Link className=\"category-link\" to=\"/flashcards-basic\" alt=\"flashcards-basic\">\r\n            <h2 className=\"category-title\">JS Basics</h2></Link>\r\n          <p className=\"category-description\">\r\n            Learn with ease the basics of JS Programming language through series\r\n            of flashcards, created for beginners.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"category-card\">\r\n        <div className=\"category-icon\">\r\n          <ion-icon name=\"logo-javascript\"></ion-icon>\r\n        </div>\r\n        <div className=\"category-content\">\r\n          <Link className=\"category-link\" to=\"/flashcards-advanced\" alt=\"flashcards-advanced\"><h2 className=\"category-title\">JS Advanced</h2></Link>\r\n          <p className=\"category-description\">\r\n            Feeling confident enough? Test your advanced knowledge in\r\n            JavaScript.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"category-card\">\r\n        <div className=\"category-icon\">\r\n          <ion-icon name=\"logo-javascript\"></ion-icon>\r\n        </div>\r\n        <div className=\"category-content\">\r\n          <Link className=\"category-link\" to=\"/flashcards-web\" alt=\"flashcards-web\"><h2 className=\"category-title\">JS Web</h2></Link>\r\n          <p className=\"category-description\">\r\n            Already able to create JS Applications and Web servers? Prove your\r\n            mastery!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Category;\r\n","import Parse from '../../node_modules/parse/dist/parse.js';\r\n\r\nexport const settings = {\r\n    host: '',\r\n};\r\n\r\nexport async function request(url, options) {\r\n    try {\r\n        const response = await fetch(url, options);\r\n\r\n        if (response.ok === false) {\r\n            const error = await response.json();\r\n            alert(error.message);\r\n            throw new Error(error.message);\r\n        }\r\n\r\n        try {\r\n            const data = await response.json();\r\n            return data;\r\n        } catch (error) {\r\n            return response;\r\n        }\r\n    } catch (error) {\r\n        alert(error.message);\r\n        throw error;\r\n    }\r\n}\r\n\r\nfunction getOptions(method = 'get', body) {\r\n    const token = localStorage.getItem('authToken');\r\n\r\n    const options = {\r\n        method,\r\n        headers: {\r\n            'X-Parse-Application-Id': '48BkBrVWc2vgaWll9O6ktpdDS4SKQoJla55qCjPq',\r\n            'X-Parse-REST-API-Key': 'olOWe8T6CIAopabzFFs06fBqVMWQNu2C5eo8I35m',\r\n            'X-Parse-Revocable-Session': '1',\r\n            'X-Parse-Session-Token': token,\r\n            'Access-Control-Allow-Origin' : '*'\r\n        }\r\n    };\r\n\r\n    if (body) {\r\n        options.headers['Content-Type'] = 'application/json';\r\n        options.body = JSON.stringify(body);\r\n    }\r\n\r\n    return options;\r\n}\r\n\r\nexport async function getRequest(url) {\r\n    return await request(url, getOptions());\r\n}\r\n\r\nexport async function postRequest(url, data) {\r\n    return await request(url, getOptions('post', data));\r\n}\r\n\r\nexport async function putRequest(url, data) {\r\n    return await request(url, getOptions('put', data));\r\n}\r\n\r\nexport async function deleteRequest(url) {\r\n    return await request(url, getOptions('delete'));\r\n}\r\n\r\nexport async function logout() {\r\n    try {\r\n        Parse.User.logOut();\r\n        localStorage.removeItem('username');\r\n        localStorage.removeItem('authToken');\r\n        localStorage.removeItem('userId');\r\n        localStorage.removeItem('email');\r\n        localStorage.removeItem('password');\r\n    } catch (error) {\r\n        alert('Ops, something went wrong. Try again, please!');\r\n        console.error(error);\r\n    }\r\n}","import * as api from \"./api.js\";\r\nimport Parse from '../../node_modules/parse/dist/parse.js'\r\n// import Parse from 'parse/dist/parse.min.js';\r\n\r\nParse.serverURL = 'https://parseapi.back4app.com';\r\nParse.initialize(\r\n  '48BkBrVWc2vgaWll9O6ktpdDS4SKQoJla55qCjPq', // This is your Application ID\r\n  'j2LuPEhDJVN3XfVnbuW4Ku1vpogMtKQ2QS0AVNum', // This is your Javascript key\r\n);\r\n\r\nconst host = 'https://parseapi.back4app.com';\r\napi.settings.host = host;\r\n\r\nexport const logout = api.logout;\r\n\r\n// Implement application specific requests\r\nexport async function getAll() {\r\n  return await api.getRequest(host + '/classes/Flashcard');\r\n}\r\n\r\nexport async function getBasicItems() {\r\n  return await api.getRequest(host + '/flashcards-basic');\r\n}\r\n\r\nexport async function getAdvancedItems() {\r\n  return await api.getRequest(host + '/flashcards-advanced');\r\n}\r\n\r\nexport async function getWebItems() {\r\n  return await api.getRequest(host + '/flashcards-web');\r\n}\r\n\r\nexport async function getMyItem() {\r\n  const userId = sessionStorage.getItem('userId');\r\n  return await api.getRequest(host + `/my-cards/${userId}`);\r\n}\r\n\r\nexport async function createItem(data) {\r\n  return await api.postRequest(host + '/classes/Flashcard', data);\r\n}\r\n\r\nexport async function editItem(id, data) {\r\n  return await api.putRequest(host + `/data/ideas/${id}`, data);\r\n}\r\n\r\nexport async function deleteItem(id) {\r\n  return await api.deleteRequest(host + `/data/ideas/${id}`);\r\n}","import React from 'react';\r\nimport { logout } from '../../api/data.js';\r\nimport '../Navbar/Navbar.css';\r\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n    const userId = localStorage.getItem('userId');\r\n    const isLogged = userId !== null;\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const { pathname } = location;\r\n    const splitLocation = pathname.split(\"/\");\r\n    \r\n    async function onLogout() {\r\n        try {\r\n            await logout();\r\n            navigate('/login', { replace: true });\r\n        } catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"nav\">\r\n            <ul>\r\n                {isLogged\r\n                    ?\r\n                    <div className=\"user\">\r\n                        <li className={pathname === \"/home\" ? \"active\" : \"\"}>\r\n                            <NavLink to=\"/home\" alt=\"home\" end={true}>\r\n                                <span className=\"nav-icon\"><ion-icon name=\"home-outline\"></ion-icon></span>\r\n                                <span className=\"nav-item-title\">Home</span>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={splitLocation[1] === \"profile\" ? \"active\" : \"\"}>\r\n                            <NavLink to={`/profile/${userId}`} alt=\"profile\">\r\n                                <span className=\"nav-icon\"><ion-icon name=\"person-outline\"></ion-icon></span>\r\n                                <span className=\"nav-item-title\">Profile</span>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={splitLocation[1] === \"my-cards\" ? \"active\" : \"\"}>\r\n                            <NavLink to={`/my-cards/${userId}`} alt=\"my-cards\">\r\n                                <span className=\"nav-icon\"><ion-icon name=\"construct-outline\"></ion-icon></span>\r\n                                <span className=\"nav-item-title\">My Cards</span>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={splitLocation[1] === \"flashcards\" ? \"active\" : \"\"}>\r\n                            <NavLink to={`/flashcards/create`} alt=\"flashcards-create\">\r\n                                <span className=\"nav-icon\"><ion-icon name=\"create-outline\"></ion-icon></span>\r\n                                <span className=\"nav-item-title\">Create</span>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={splitLocation[1] === \"practice\" ? \"active\" : \"\"}>\r\n                            <NavLink to={`/practice/${userId}`} alt=\"practice\">\r\n                                <span className=\"nav-icon\"><ion-icon name=\"bulb-outline\"></ion-icon></span>\r\n                                <span className=\"nav-item-title\">Practice</span>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={splitLocation[1] === \"logout\" ? \"active\" : \"\"}>\r\n                            <NavLink to={`#`} alt=\"logout\">\r\n                                <span className=\"nav-icon\"><ion-icon name=\"log-out-outline\"></ion-icon></span>\r\n                                <button onClick={() => onLogout()} className=\"nav-logout-btn\">Logout</button>\r\n                            </NavLink>\r\n                        </li>\r\n                    </div>\r\n                    : <div className=\"guest\">\r\n                        <li className={pathname === \"/\" ? \"active\" : \"\"}>\r\n                            <NavLink to=\"/\" alt=\"landing-page\" end={true}>\r\n                                <span className=\"nav-icon\"><ion-icon name=\"home-outline\"></ion-icon></span>\r\n                                <span className=\"nav-item-title\">Home</span>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={splitLocation[1] === \"collections\" ? \"active\" : \"\"}>\r\n                            <NavLink to=\"/collections\" alt=\"collections\">\r\n                                <span className=\"nav-icon\"><ion-icon name=\"library-outline\"></ion-icon></span>\r\n                                <span className=\"nav-item-title\">Flashcards</span>\r\n                            </NavLink>\r\n                        </li>\r\n\r\n                        <li className={splitLocation[1] === \"register\" ? \"active\" : \"\"}>\r\n                            <NavLink to=\"/register\" alt=\"register\">\r\n                                <span className=\"nav-icon\"><ion-icon name=\"person-add-outline\"></ion-icon></span>\r\n                                <span className=\"nav-item-title\">Register</span>\r\n                            </NavLink>\r\n                        </li>\r\n\r\n                        <li className={splitLocation[1] === \"login\" ? \"active\" : \"\"}>\r\n                            <NavLink to=\"/login\" alt=\"login\">\r\n                                <span className=\"nav-icon\"><ion-icon name=\"log-in-outline\"></ion-icon></span>\r\n                                <span className=\"nav-item-title\">Login</span>\r\n                            </NavLink>\r\n                        </li>\r\n                    </div>\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Link } from 'react-scroll'\r\nimport './Home.css';\r\nimport Category from '../Category/Category.js';\r\n\r\nfunction Home() {\r\n    const user = localStorage.getItem('username');\r\n\r\n    return (\r\n        <div className=\"categories-container\">\r\n            <h2 className=\"welcome-user\">\r\n                <ion-icon name=\"finger-print-sharp\"></ion-icon>\r\n                <span className=\"current-user\">{`${user}`}</span></h2>\r\n            <Link\r\n                className=\"continue-link\"\r\n                to=\"categories\"\r\n                alt=\"categories\"\r\n                spy={true}\r\n                smooth={true}\r\n                duration={500}\r\n            >Continue\r\n            </Link>\r\n            <h1 className=\"category-title\">Choose category</h1>\r\n            <h3>The categories are formed on the basis of our own experience. By no means do we claim to be accurate, as everyone judges for themselves the complexity of the questions and terminology.</h3>\r\n            <Category />\r\n\r\n            <div className=\"info-container\">\r\n                <div className=\"js-basics\">\r\n                    <p className=\"info\">\r\n                    <ion-icon name=\"help-circle-outline\"></ion-icon> <strong>JS Basics</strong> includes questions that concern the basics of programming and are more general, that is, they could apply not only to the JavaScript language, but also to other programming languages. For example:\r\n                    <ul>\r\n                        <li>Types and variables</li>\r\n                        <li>Arrays</li>\r\n                        <li>Conditional statement</li>\r\n                        <li>Loops</li>\r\n                    </ul>\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"js-advanced\">\r\n                    <p className=\"info\">\r\n                    <ion-icon name=\"help-circle-outline\"></ion-icon> In <strong>JS Advanced</strong> category you will find more complex questions concerning:\r\n                    <ul>\r\n                        <li>associative arrays, objects, classes</li>\r\n                        <li>word processing, string operations, regex</li>\r\n                        <li>Functions and functional programming</li>\r\n                        <li>DOM manipulation</li>\r\n                        <li>Single Page Applications, HTTP requests, REST Services, asynchronous programming etc.</li>\r\n                    </ul>\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"js-web\">\r\n                    <p className=\"info\">\r\n                    <ion-icon name=\"help-circle-outline\"></ion-icon> In <strong>JS Web</strong> category we will include questions related to:\r\n                    <ul>\r\n                        <li>React.js library</li>\r\n                        <li>Development of server-side JavaScript applications with Node.js platform</li>\r\n                        <li>Using Express.js as a framework</li>\r\n                        <li>Non-relational database (MongoDB) and the Mongoose library for retrieving data from it</li>\r\n                    </ul>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/bg.135a541d.jpg\";","import '../DemoFlashcard/DemoFlashcard.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Flashcard() {\r\n    const questionElement = <span>\r\n        <h2 className=\"question\">Question:</h2>\r\n        <h2>What is JavaScript?</h2>\r\n    </span>;\r\n\r\n    const answerElement = <span>\r\n        <h2 className=\"question\">Answer:</h2>\r\n        <div className=\"answer\">Programming language with first-class functions. Main characteristics:\r\n            <ul>\r\n                <li>prototype-based</li>\r\n                <li>multi-paradigm</li>\r\n                <li>single-threaded</li>\r\n                <li>dynamic language</li>\r\n                <li>supporting object-oriented, imperative, and declarative styles</li>\r\n            </ul>\r\n        </div>\r\n        <Link\r\n            className=\"details-button\"\r\n            to=\"#\"\r\n            alt=\"\"\r\n        >Details\r\n        </Link>\r\n    </span>\r\n\r\n    const cover = <div className=\"cover\">\r\n        {questionElement}\r\n    </div>;\r\n    const details = <div className=\"details\">\r\n        {answerElement}\r\n    </div>\r\n\r\n    return (\r\n        <div className=\"card\" >\r\n            {cover}\r\n            {details}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Flashcard;","import React from 'react'\r\nimport './LandingPage.css';\r\nimport background from '../../../images/bg.jpg';\r\nimport { Link, Outlet } from 'react-router-dom';\r\nimport DemoFlashcard from '../../DemoFlashcard/DemoFlashcard.js';\r\nimport Home from '../../User/Home/Home.js';\r\n\r\nfunction LandingPage() {\r\n    const link = <Link alt=\"register\" className=\"links\" to=\"/register\">Register</Link>;\r\n    const user = localStorage.getItem('username');\r\n\r\n    return (\r\n        <div>\r\n            {user\r\n                ? <Home />\r\n                : <section className=\"header\" style={{ backgroundImage: `url(${background})` }}>\r\n                    <div className=\"header-content\">\r\n                        <div className=\"animate__animated animate__fadeInDown\">\r\n                            <h1>JavaScript Flashcards Trainer</h1>\r\n                            <h6>Challenge yourself</h6>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            }\r\n\r\n\r\n            <section className=\"main-info\">\r\n                <div className=\"website-info\">\r\n                    <div className=\"one\">\r\n                        <h1 className=\"category-intro-heading\">\r\n                            Studying JavaScript...<br></br>but struggling with terminology?\r\n                        </h1>\r\n                        <p className=\"category-intro\">\r\n                            Have you ever said to yourself after watching another tutorial: \"Oh, I understand everything! JavaScript is not a difficult language, I will learn it in no time!\" You are convinced that you know everything and you will perform excellently at a job interview. And later, when you are asked a simple question, can you not find the right words to give the answer?</p>\r\n                        <p className=\"category-intro\">\r\n                            The conclusion that can be drawn is that you have not exercised enough. You have never heard your answers spoken aloud.\r\n                            With the help of your auditory memory, you will learn complex terminology much more easily. By hearing your own voice and repeating short but clear definitions, you will train your brain and soon be able to answer questions almost automatically.\r\n                        </p>\r\n                        <p className=\"category-intro\">\r\n                            This way of learning should not be underestimated. Just remember how young children are taught their first words by being shown picture cards and being asked to name the object or animal in words.\r\n                        </p>\r\n                        <p className=\"category-intro\">\r\n                            After all, we are like young children - but in our case we have to learn a whole programming language from scratch.\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"two\"></div>\r\n\r\n                    <div className=\"three\">\r\n                        <h2>Flashcard Example</h2>\r\n                        <DemoFlashcard />\r\n                    </div>\r\n\r\n                    <div className=\"four\">\r\n                        <h1 className=\"category-intro-heading\">So, how to do that?</h1>\r\n                        <p className=\"category-intro\">\r\n                            We suggest you try the learning system via our flash cards. It may not seem serious and motivating at first, but then you will notice how useful the cards will be as you try to improve your knowledge. We have prepared and will constantly update the collections of flashcards. But if you want to add a pinch of personality, then why not {link} as our user and start creating your own flashcards?\r\n                        </p>\r\n                        <p className=\"category-intro\">\r\n                            Currently, you can see all flashcards <Link alt=\"collections\" to=\"/collections\" className=\"links\">here</Link> but it is without clear categorization. When you register, they will be sorted by categories, you will be able to create your own cards in your list and you will also be able to even save flashcards created by other users in your Practice list.\r\n                        </p>\r\n                        <p className=\"category-intro\">\r\n                            And why not create your own collection of questions that were asked to you in an interview, but you did not answer correctly back then? Now you get the chance to master them to perfection.\r\n                        </p>\r\n                        <p className=\"category-intro\">\r\n                            Ready to start?\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <Outlet />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage;\r\n","export default __webpack_public_path__ + \"static/media/register-bg.1d6a1a06.jpg\";","import { store } from 'react-notifications-component';\r\n\r\nfunction notification(title, message) {\r\n    return (\r\n        store.addNotification({\r\n            title:  title,\r\n            message: message,\r\n            type: \"info\",\r\n            insert: \"bottom-center\",\r\n            container: \"top-center\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n                duration: 5000,\r\n                onScreen: true\r\n            }\r\n        })\r\n\r\n    )\r\n}\r\n\r\nexport default notification\r\n","import Parse from '../../node_modules/parse/dist/parse.js';\nimport notification from '../helpers/notification.js';\n\nexport async function login(username, password) {\n    try {\n        let user = await Parse.User.logIn(username, password);\n        const email = user.get('email');\n        if (user.get('emailVerified')) {\n            const currentUser = Parse.User.current();\n            const sessionToken = currentUser.getSessionToken();\n            localStorage.setItem('username', username);\n            localStorage.setItem('authToken', sessionToken);\n            localStorage.setItem('userId', currentUser.id);\n            localStorage.setItem('email', email);\n            localStorage.setItem('password', password);\n        }\n    } catch (error) {\n        Parse.User.logOut();\n        console.log('Please register first');\n        return null;\n        // return notify(error);\n    }\n}\n\nexport async function register(username, email, password) {\n    const user = new Parse.User();\n    user.set('username', username);\n    user.set('email', email);\n    user.set('password', password);\n    \n    try {\n        await user.signUp();\n        Parse.User.logOut();\n        notification('Almost done!', \"Email must be verified. Please, visit your mail inbox for further instructions.\");\n    } catch (error) {\n        notification('Ops', `Something went wrong: + ${error}`);\n        console.error(error);\n    }\n}\n\nexport async function logout() {\n    try {\n        Parse.User.logOut();\n        localStorage.removeItem('username');\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('email');\n        localStorage.removeItem('password');\n        localStorage.removeItem('name');\n    } catch (error) {\n        notification('Ops','Something went wrong. Try again, please!');\n        console.error(error);\n    }\n}\n\nexport const getUser = () => {\n    let username = localStorage.getItem('username');\n    return username;\n};\n\nexport const isAuthenticated = () => {\n    return Boolean(getUser())\n};\n\nexport const onDelete = async () => {\n    const userId = localStorage.getItem('userId');\n    const User = new Parse.User();\n    const query = new Parse.Query(User);\n    try {\n        // Finds the user by its ID\n        let user = await query.get(userId);\n        try {\n            // Invokes the \"destroy\" method to delete the user\n            let response = await user.destroy();\n            localStorage.removeItem('username');\n            localStorage.removeItem('authToken');\n            localStorage.removeItem('userId');\n            localStorage.removeItem('email');\n            localStorage.removeItem('password');\n            localStorage.removeItem('name');\n            console.log('Deleted user', response);\n        } catch (error) {\n            console.error('Error while deleting user', error);\n        }\n    } catch (error) {\n        console.error('Error while retrieving user', error);\n    }\n}\n\nexport async function getUserImage(userId) {\n    const User = new Parse.User();\n    const query = new Parse.Query(User);\n    try {\n        let user = await query.get(userId);\n        const currentUserImage = await user.get('image');\n        if (currentUserImage === undefined || currentUserImage === null) {\n            currentUserImage.src = \"../images/user.png\";\n        } else if (currentUserImage._url) {\n            currentUserImage.src = currentUserImage.url();\n        }\n        currentUserImage.src = refreshImage('user-image', currentUserImage.url());\n\n        function refreshImage(imgElement, imgURL) {\n            let timestamp = new Date().getTime();\n            let queryString = \"?t=\" + timestamp;\n            currentUserImage.src = imgURL + queryString;\n            return currentUserImage.src;\n        }\n        return currentUserImage.src;\n    } catch (error) {\n        console.error('Error while retrieving image', error);\n    }\n}","import * as authService from \"../services/authService.js\";\r\nimport notification from \"./notification.js\";\r\n\r\nexport async function validateInput(username, email, password, repass) {\r\n    if (username === '' \r\n    || username === undefined \r\n    || email === '' \r\n    || email === undefined \r\n    || password === '' \r\n    || password === undefined \r\n    || repass === '' \r\n    || repass === undefined) {\r\n        return notification('Missing information', 'All fields are required!');\r\n    }\r\n\r\n    if (username === 'admin') {\r\n        return notification('Problem found', 'Username cannot be \"admin\"');\r\n    }\r\n\r\n    if (password === 'password') {\r\n        return notification('Problem found', 'Password too easy! Try more unique one')\r\n    }\r\n\r\n    if (password !== repass) {\r\n        return notification('Problem found', 'Two passwords don\\'t match!');\r\n    }\r\n\r\n    if (typeof username !== 'string' || !username instanceof String) {\r\n        return;\r\n    }\r\n\r\n    let chars = password.toString().split(\"\");\r\n    let digits = 0;\r\n    let isValid = false;\r\n    let isInvSymbol = false;\r\n    let hasDigits = false;\r\n\r\n    // Checks if the char is a num and if it has 2 digits at least\r\n    for (let i = 0; i < chars.length; i++) {\r\n        let current = Number(chars[i]);\r\n        if (Number.isInteger(current)) {\r\n            digits++;\r\n            if (digits >= 2) {\r\n                hasDigits = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Checks if a char is letter or digit only\r\n    for (let j = 0; j < chars.length; j++) {\r\n        let currChar = chars[j];\r\n        if ((currChar.charCodeAt() >= 48 && currChar.charCodeAt() <= 57) || (currChar.charCodeAt() >= 65 && currChar.charCodeAt() <= 90) || (currChar.charCodeAt() >= 97 && currChar.charCodeAt() <= 122)) {\r\n            isInvSymbol = false;\r\n        } else {\r\n            isInvSymbol = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (password.length < 6 || password.length > 10) {\r\n        isValid = false;\r\n    } else {\r\n        isValid = true;\r\n    }\r\n\r\n    if (isValid === false) {\r\n        return notification('Problem found', 'Password must be between 6 and 10 characters.');\r\n    }\r\n\r\n    if (isInvSymbol === true) {\r\n        return notification('Problem found','Password must consist only of letters and digits.');\r\n    }\r\n\r\n    if (hasDigits === false) {\r\n        return notification('Problem found', 'Password must have at least 2 digits.');\r\n    }\r\n\r\n    let cleanedUser = '';\r\n    const usernamePattern = /[/\\\\n\\\\r<>\";&()^\\s:*%+?${}|[\\]\\\\@]+/gm;\r\n    const test = usernamePattern.test(username);\r\n    if (test === true) {\r\n        for (let i = 0; i < username.length; i++) {\r\n            let found = username[i].match(usernamePattern);\r\n            if (found !== null && found.length > 0) {\r\n                cleanedUser += '';\r\n            } else {\r\n                cleanedUser += username[i];\r\n            }\r\n        };\r\n        notification('We are sorry!', `Your username is set to ${cleanedUser}, according to our requirements!`);\r\n        await authService.register(cleanedUser, email, password);\r\n    } else {\r\n        await authService.register(username, email, password);\r\n        \r\n    }\r\n}","import React, { useState } from 'react';\r\nimport './Register.css';\r\nimport registerBackground from '../../../images/register-bg.jpg';\r\nimport { validateInput } from '../../../helpers/validator.js';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nfunction Register() {\r\n    const [username, setUsername] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [rePass, setRePass] = useState();\r\n    const navigation = useNavigate();\r\n\r\n    async function registerUser(e) {\r\n        e.preventDefault();\r\n\r\n        const data = { username, email, password, rePass };\r\n\r\n        try {\r\n            validateInput(data.username, data.email, data.password, data.rePass);\r\n            setUsername(username);\r\n            navigation('/login', { replace: true });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section className=\"register-section\">\r\n            <div className=\"register-container\">\r\n                <div className=\"form-container\">\r\n                    <form className=\"register-form\" onSubmit={e => registerUser(e)}>\r\n                        <h1>Register</h1>\r\n                        <p>Please enter your credentials.</p>\r\n                        <label>Username</label><br></br>\r\n                        <div className=\"icon\">\r\n                            <i className=\"fas fa-user\"></i>\r\n                            <input name=\"username\" type=\"text\" autoComplete=\"username\" value={username} onChange={e => setUsername(e.target.value)}></input><br></br>\r\n                        </div>\r\n                        <label>Email</label><br></br>\r\n                        <div className=\"icon\">\r\n                            <i className=\"fas fa-envelope-open-text\"></i>\r\n                            <input name=\"email\" type=\"email\" autoComplete=\"email\" pattern=\"[^]+@[^]+[.][a-z]{2,63}$\" value={email} onChange={e => setEmail(e.target.value)}></input><br></br>\r\n                        </div>\r\n                        <p className=\"register-info\"><i className=\"fas fa-info-circle\"></i> Password must be between 6 and 10 characters. Password must consist only of letters and at least 2 digits.</p>\r\n                        <label>Password</label><br></br>\r\n                        <div className=\"icon\">\r\n                            <i className=\"fas fa-lock\"></i>\r\n                            <input className=\"password\" type=\"password\" autoComplete=\"current-password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)}></input>\r\n                            <i id=\"eye-one\" className=\"fas fa-eye\"></i>\r\n                            <br></br>\r\n                        </div>\r\n                        <label>Repeat password</label><br></br>\r\n                        <div className=\"icon\">\r\n                            <i className=\"fas fa-lock\"></i>\r\n                            <input className=\"rePass\" type=\"password\" autoComplete=\"current-password\" name=\"rePass\" onChange={e => setRePass(e.target.value)}></input><br></br>\r\n                            <i id=\"eye-two\" className=\"fas fa-eye\"></i>\r\n                        </div>\r\n                        <div>\r\n                            <button type=\"submit\" className=\"registerBtn\">Register</button>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"second\">\r\n                        <Link className=\"link\" to=\"/login\" alt=\"login\">Already have an account?</Link><br></br>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"register-image\" style={{ backgroundImage: `url(${registerBackground})` }}>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","export default __webpack_public_path__ + \"static/media/login-bg.2d9cdc8d.jpg\";","import { createContext, useState, useContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst initialState = {\r\n    username: '',\r\n    email: '',\r\n    authToken: '',\r\n    userId: ''\r\n}\r\n\r\nexport const AuthProvider = ({\r\n    children\r\n}) => {\r\n    \r\n    const [user, setUser] = useState(initialState);\r\n    const login = (username, password) => {\r\n        setUser(username, password);\r\n    }\r\n    return <AuthContext.Provider value={{user, login, isAuthenticated: Boolean(user.username)}}>\r\n        { children }\r\n    </AuthContext.Provider>\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const authState = useContext(AuthContext);\r\n    return authState;\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport * as authService from '../../../services/authService.js';\r\nimport './Login.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport loginBackground from '../../../images/login-bg.jpg';\r\nimport { AuthContext } from '../../../contexts/AuthContext.js';\r\nimport notification from '../../../helpers/notification.js';\r\n\r\nfunction Login() {\r\n    const { login } = useContext(AuthContext);\r\n    const [error, setError] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    async function loginUser(e) {\r\n        e.preventDefault();\r\n        const { username, password } = Object.fromEntries(new FormData(e.currentTarget));\r\n\r\n        login(username, password);\r\n        if (username === '' || password === '') {\r\n            notification(\"Empty input\", \"Please, fill in all fields!\");\r\n            return;\r\n        }\r\n\r\n        if (username !== undefined\r\n            && password !== undefined\r\n            && username !== null\r\n            && password !== null) {\r\n            try {\r\n                const result = await authService.login(username, password);\r\n                setError(false);\r\n                if (result === null) {\r\n                    notification(\"User doesn't exist!\", \"Please register first\");\r\n                    navigate('/login', { replace: true });\r\n                    return null;\r\n                }\r\n                navigate('/home', { replace: true });\r\n            } catch (err) {\r\n                console.error(err.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"login-section\">\r\n            <div className=\"login-container\">\r\n                <div className=\"loginForm-container\">\r\n                    <form onSubmit={e => loginUser(e)}>\r\n                        {error && (\r\n                            <div>Error: Wrong email or password!</div>\r\n                        )}\r\n                        <h1>Login</h1>\r\n                        <p>Please enter your credentials.</p>\r\n                        <label>Username</label><br></br>\r\n                        <div className=\"icon\">\r\n                            <i className=\"fas fa-envelope-open-text\"></i>\r\n                            <input name=\"username\" type=\"text\" autoComplete=\"username\"></input><br></br>\r\n                        </div>\r\n                        <label>Password</label><br></br>\r\n                        <div className=\"icon\">\r\n                            <i className=\"fas fa-unlock\"></i>\r\n                            <input className=\"login-password\" type=\"password\" autoComplete=\"current-password\" name=\"password\"></input>\r\n                            <i id=\"eye-three\" className=\"fas fa-eye\"></i>\r\n                            <br></br>\r\n                        </div>\r\n                        <div>\r\n                            <button type=\"submit\" className=\"loginBtn\">Login</button>\r\n                        </div>\r\n                    </form>    \r\n                    <div className=\"second\">\r\n                        <Link className=\"link\" to=\"/register\" alt=\"register\">Create new account</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"login-image\" style={{ backgroundImage: `url(${loginBackground})` }}>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import '../Backdrop/Backdrop.css';\r\n\r\nfunction Backdrop(props) {\r\n    return <div className='backdrop' onClick={props.onClick} />;\r\n}\r\n\r\nexport default Backdrop;","import '../Modal/Modal.css';\r\nimport * as authService from '../../services/authService.js';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Modal(props) {\r\n  const navigate = useNavigate();\r\n  const userId = localStorage.getItem('userId');\r\n\r\n  async function deleteAccount() {\r\n    try {\r\n      await authService.onDelete(userId);\r\n      navigate('/');\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='modal'>\r\n      <p>{props.text}</p>\r\n      <button className='btn btn--alt' onClick={props.onClose}>\r\n        Cancel\r\n      </button>\r\n      <button className='btn' onClick={deleteAccount}>\r\n        Confirm\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;","import Parse from 'parse/dist/parse';\nimport notification from '../helpers/notification.js';\nconst baseUrl = 'https://parseapi.back4app.com/classes/Flashcard';\n\nexport const getCard = async (id) => {\n    const Flashcard = Parse.Object.extend('Flashcard');\n    const query = new Parse.Query(Flashcard);\n    query.equalTo('objectId', id);\n    try {\n        const results = await query.find();\n        for (const object of results) {\n            const category = object.get('category');\n            const question = object.get('question');\n            const answer = object.get('answer');\n            const owner = object.get('owner');\n            const currentCard = {\n                category,\n                question,\n                answer,\n                owner\n            }\n            return currentCard;\n        }\n    } catch (error) {\n        console.error('Error while fetching Flashcard', error);\n    }\n};\n\nexport const getAll = async () => {\n    let response = await fetch(`${baseUrl}/pets`)\n\n    let pets = await response.json();\n\n    let result = Object.values(pets)\n\n    return result;\n};\n\nexport const create = async (data) => {\n    if (data.category !== undefined && data.question !== undefined && data.answer !== undefined) {\n        try {\n            const newFlashcard = new Parse.Object('Flashcard');\n            const currentUser = Parse.User.current();\n            const category = data.category;\n            const question = data.question;\n            const answer = data.answer;\n            newFlashcard.set('category', category);\n            newFlashcard.set('question', question);\n            newFlashcard.set('answer', answer);\n            newFlashcard.set('owner', currentUser);\n            currentUser.add('myCards', data = { category, question, answer, currentUser });\n            try {\n                const result = await newFlashcard.save();\n                const response = await currentUser.save();\n                console.log('User updated ', response);\n                console.log('Flashcard created', result);\n            } catch (error) {\n                console.error('Error while creating Flashcard: ', error);\n            }\n        } catch (err) {\n            console.log(err.message)\n        }\n    }\n};\n\nexport const onEdit = async (id, data) => {\n    const query = new Parse.Query('Flashcard');\n    try {\n        const object = await query.get(id);\n        object.set('question', data.questionEdit);\n        object.set('answer', data.answerEdit);\n        object.set('category', data.categoryEdit);\n        try {\n            const response = await object.save();\n            console.log('Flashcard updated', response);\n        } catch (error) {\n            console.error('Error while updating Flashcard', error);\n        }\n    } catch (error) {\n        console.error('Error while retrieving object Flashcard', error);\n    }\n};\n\nexport async function updateCardDetails(id, owner) {\n    const Flashcard = Parse.Object.extend('Flashcard');\n    const query = new Parse.Query(Flashcard);\n    query.equalTo('objectId', id);\n    try {\n        const results = await query.find();\n        for (const object of results) {\n            const question = object.get('question');\n            const answer = object.get('answer');\n            let currentOwner = object.get('owner');\n            owner = currentOwner;\n            const updatedCard = {\n                question,\n                answer,\n                owner\n            }\n            return updatedCard;\n        }\n    } catch (error) {\n        console.error('Error while fetching Flashcard', error);\n    }\n}\n\nexport async function getMyCards() {\n    const Flashcard = Parse.Object.extend('Flashcard');\n    const query = new Parse.Query(Flashcard);\n    query.ascending('category');\n    const userId = localStorage.getItem('userId');\n    const myCards = [];\n\n    try {\n        const result = await query.find();\n        const cards = JSON.parse(JSON.stringify(result));\n        for (let current of cards) {\n            const owner = current.owner.objectId;\n            if (owner === userId) {\n                myCards.push(current);\n            }\n        }\n        return myCards;\n\n    } catch (error) {\n        console.error('Error while fetching Flashcard', error);\n    }\n}\n\nexport async function deleteCard(id) {\n    const query = new Parse.Query('Flashcard');\n    try {\n        const object = await query.get(id);\n        try {\n            const response = await object.destroy();\n            console.log('Deleted ParseObject', response);\n        } catch (error) {\n            console.error('Error while deleting ParseObject', error);\n        }\n    } catch (error) {\n        console.error('Error while retrieving ParseObject', error);\n    }\n};\n\nexport async function practice(id) {\n    const Flashcard = Parse.Object.extend('Flashcard');\n    const query = new Parse.Query(Flashcard);\n    query.equalTo('objectId', id);\n    try {\n        const currentCard = await query.get(id);\n        const currentUser = Parse.User.current();\n        const cardIds = [];\n        const practiceList = currentUser.get('practiceCards');\n        for (let card of practiceList) {\n            if (!currentCard.id === card.id) {\n                cardIds.push(card.id);\n            }\n        }\n        const check = cardIds.includes(currentCard.id);\n        if (!check) {\n            currentUser.add('practiceCards', currentCard);\n            await currentUser.save();\n            notification(\"Success!\", \"Card added to your Practice List!\");\n        } else {\n            notification(\"Error!\", \"This card is already added to your Practice list\");\n            return null;\n        }\n    } catch (err) {\n        console.log(err.message)\n    }\n}\n\nexport async function checkIfInPracticeList(id, ownerId) {\n    const Flashcard = Parse.Object.extend('Flashcard');\n    const query = new Parse.Query(Flashcard);\n    query.equalTo('objectId', id);\n    try {\n        const currentCard = await query.get(id);\n        const currentUser = Parse.User.current();\n        const cardIds = [];\n        const practiceList = currentUser.get('practiceCards');\n        for (let card of practiceList) {\n            cardIds.push(card.id);\n        }\n        const check = cardIds.includes(currentCard.id);\n        return check;\n    } catch (err) {\n        console.log(err.message)\n    }\n}\n\nexport async function removeCardFromPractice(id, userId) {\n    let user = Parse.User.current();\n    const practiceList = user.get('practiceCards');\n    try {\n        for (let card of practiceList) {\n            if (card.id === id) {\n                let index = practiceList.indexOf(card);\n                practiceList.splice(index, 1);\n                user.set('practiceCards', practiceList);\n            }\n        }\n        try {\n            // Saves the user with the updated data\n            let response = await user.save();\n            window.location.reload(`/practice/${userId}`);\n            console.log('Updated user', response);\n          } catch (error) {\n            console.error('Error while updating user', error);\n        }\n    } catch (err) {\n        console.log(err.message)\n    }\n}\n\nexport async function getName(ownerId) {\n    const User = new Parse.User();\n    const query = new Parse.Query(User);\n    try {\n        let user = await query.get(ownerId);\n        console.log(user);\n        const nameResult = user.get('username');\n        return nameResult;\n    } catch (error) {\n        console.error('Error while fetching user', error);\n    }\n};\n\nexport async function countMyCards(userId) {\n    const Flashcard = Parse.Object.extend('Flashcard');\n    const query = new Parse.Query(Flashcard);\n    let myCards = 0;\n\n    try {\n        const result = await query.find();\n        const cards = JSON.parse(JSON.stringify(result));\n\n        for (let current of cards) {\n            const owner = current.owner.objectId;\n            if (owner === userId) {\n                myCards++;\n            }\n        }\n        return myCards;\n\n    } catch (error) {\n        console.error('Error while fetching Flashcard', error);\n    }\n}\n\nexport async function getUserLevel(userId) {\n    const User = new Parse.User();\n    const query = new Parse.Query(User);\n    try {\n        let user = await query.get(userId);\n        let level = user.attributes.userLevel;\n        const contribution = await countMyCards(userId);\n        if (contribution <= 0 && contribution <= 5) {\n            level = \"Disciple\";\n        } else if (contribution > 5 && contribution <= 10) {\n            level = \"Pilgrim\";\n        } else if (contribution > 11 && contribution <= 15) {\n            level = \"Junior Apprentice\";\n        } else if (contribution > 16 && contribution <= 20) {\n            level = \"Apprentice\";\n        } else if (contribution > 21 && contribution <= 25) {\n            level = \"Strategos\";\n        } else if (contribution > 26 && contribution <= 30) {\n            level = \"Royal Strategos\";\n        } else if (contribution > 31 && contribution <= 35) {\n            level = \"Scholar\";\n        } else if (contribution > 36 && contribution <= 40) {\n            level = \"Royal Scholar\";\n        } else if (contribution > 41 && contribution <= 45) {\n            level = \"Protector\";\n        } else if (contribution > 46 && contribution <= 50) {\n            level = \"Advisor\";\n        } else if (contribution > 51 && contribution <= 55) {\n            level = \"Cleric\";\n        } else if (contribution > 56 && contribution <= 60) {\n            level = \"King’s Advisor\";\n        } else if (contribution > 61 && contribution <= 65) {\n            level = \"Prime Justicar\";\n        } else if (contribution > 66 && contribution <= 70) {\n            level = \"Archduke\";\n        } else if (contribution > 71 && contribution <= 75) {\n            level = \"High Templar\";\n        } else if (contribution > 76 && contribution <= 80) {\n            level = \"Grand Admiral\";\n        } else if (contribution > 81 && contribution <= 85) {\n            level = \"Royal Inquisitor\";\n        } else if (contribution > 86 && contribution <= 90) {\n            level = \"Magister\";\n        } else if (contribution > 91 && contribution <= 95) {\n            level = \"High Prince\";\n        } else if (contribution > 96 && contribution <= 100) {\n            level = \"High Emperor\";\n        }\n        await user.set('userLevel', level);\n        await user.save();\n        return level;\n    } catch (err) {\n        console.log(err.message)\n    }\n}\n\nexport async function createdAt(userId) {\n    const User = new Parse.User();\n    const query = new Parse.Query(User);\n    try {\n        let user = await query.get(userId);\n        let created = JSON.stringify(user.attributes.createdAt);\n        const date = created.slice(1, 11);\n        return date;\n    } catch (err) {\n        console.log(err.message)\n    }\n}\n\nexport async function getWebCards() {\n    let finalArray = [];\n    let webCards = [];\n    const query = new Parse.Query('Flashcard');\n    query.containedIn('category', ['JS Web']);\n\n    try {\n        const results = await query.find();\n        for (let object of results) {\n            const id = object.id;\n            const category = object.get('category');\n            const question = object.get('question');\n            const answer = object.get('answer');\n            const owner = object.get('owner');\n\n            const currentCard = {\n                id,\n                category,\n                question,\n                answer,\n                owner\n            }\n            const check = webCards.includes(currentCard);\n            if (!check) {\n                webCards.push(currentCard);\n                finalArray = webCards;\n            }\n        };\n    } catch (error) {\n        console.log(`Error: ${JSON.stringify(error)}`);\n    }\n    return finalArray;\n}\n\nexport async function getBasicsCards() {\n    let finalArray = [];\n    let basicsCards = [];\n    const query = new Parse.Query('Flashcard');\n    query.containedIn('category', ['JS Basics']);\n\n    try {\n        const results = await query.find();\n        for (let object of results) {\n            const id = object.id;\n            const category = object.get('category');\n            const question = object.get('question');\n            const answer = object.get('answer');\n            const owner = object.get('owner');\n\n            const currentCard = {\n                id,\n                category,\n                question,\n                answer,\n                owner\n            }\n            const check = basicsCards.includes(currentCard);\n            if (!check) {\n                basicsCards.push(currentCard);\n                finalArray = basicsCards;\n            }\n        };\n    } catch (error) {\n        console.log(`Error: ${JSON.stringify(error)}`);\n    }\n    return finalArray;\n}\n\nexport async function getAdvancedCards() {\n    let finalArray = [];\n    let advancedCards = [];\n    const query = new Parse.Query('Flashcard');\n    query.containedIn('category', ['JS Advanced']);\n    try {\n        const results = await query.find();\n        for (let object of results) {\n            const id = object.id;\n            const category = object.get('category');\n            const question = object.get('question');\n            const answer = object.get('answer');\n            const owner = object.get('owner');\n\n            const currentCard = {\n                id,\n                category,\n                question,\n                answer,\n                owner\n            }\n            const check = advancedCards.includes(currentCard);\n            if (!check) {\n                advancedCards.push(currentCard);\n                finalArray = advancedCards;\n            }\n        }\n    } catch (err) {\n        console.log(err.message)\n    }\n\n    return finalArray;\n}\n\nexport async function filterCards(category) {\n    let finalArray = [];\n    let filteredCards = [];\n    const userId = localStorage.getItem('userId');\n    const query = new Parse.Query('Flashcard');\n    query.containedIn('category', [category]);\n    query.containedIn('owner', [userId]);\n    try {\n        const results = await query.find();\n        for (let object of results) {\n            const id = object.id;\n            const category = object.get('category');\n            const question = object.get('question');\n            const answer = object.get('answer');\n            const owner = object.get('owner');\n\n            const currentCard = {\n                id,\n                category,\n                question,\n                answer,\n                owner\n            }\n            const check = filteredCards.includes(currentCard);\n            if (!check) {\n                filteredCards.push(currentCard);\n                finalArray = filteredCards;\n            }\n        }\n    } catch (err) {\n        console.log(err.message)\n    }\n    return finalArray;\n}\n\nexport async function getPracticeList(userId) {\n    let practiceList = [];\n    let result = [];\n    const User = new Parse.User();\n    const query = new Parse.Query(User);\n    try {\n        let user = await query.get(userId);\n        const list = user.get('practiceCards');\n        const array = Object.entries(list);\n        for (let [index, card] of array) {\n            const category = card.get('category');\n            const question = card.get('question');\n            const answer = card.get('answer');\n            const owner = card.get('owner');\n            const queryResult = {\n                index: index,\n                id: card.id,\n                category,\n                question,\n                answer,\n                owner\n            }\n\n            const check = result.includes(queryResult);\n            if (!check) {\n                result.push(queryResult);\n                practiceList = result;\n            }\n        }\n    } catch (error) {\n        console.log(`Error: ${JSON.stringify(error)}`);\n    }\n\n    return practiceList;\n}\n\nexport async function getAllCards() {\n    let finalArray = [];\n    let advancedCards = [];\n    const query = new Parse.Query('Flashcard');\n\n    try {\n        const results = await query.find();\n        for (let object of results) {\n            const id = object.id;\n            const category = object.get('category');\n            const question = object.get('question');\n            const answer = object.get('answer');\n            const owner = object.get('owner');\n\n            const currentCard = {\n                id,\n                category,\n                question,\n                answer,\n                owner\n            }\n            const check = advancedCards.includes(currentCard);\n            if (!check) {\n                advancedCards.push(currentCard);\n                finalArray = advancedCards;\n            }\n        }\n    } catch (err) {\n        console.log(err.message)\n    }\n\n    return finalArray;\n}","import React, { useState, useEffect } from 'react';\r\nimport Parse from '../../../../node_modules/parse/dist/parse.js';\r\nimport '../Profile/Profile.css';\r\nimport Backdrop from '../../Backdrop/Backdrop.js';\r\nimport Modal from './../../Modal/Modal.js';\r\nimport * as cardService from '../../../services/cardService.js';\r\nimport * as authService from '../../../services/authService.js';\r\n\r\nfunction Profile() {\r\n    const [showModal, setShowModal] = useState();\r\n    const [count, setCount] = useState('');\r\n    const [level, setLevel] = useState('');\r\n    const [created, setCreated] = useState();\r\n    const [image, setImage] = useState(null);\r\n    const userId = localStorage.getItem('userId');\r\n    const username = localStorage.getItem('username');\r\n    const email = localStorage.getItem('email');\r\n\r\n    function showModalHandler() {\r\n        setShowModal(true);\r\n    }\r\n\r\n    function closeModalHandler() {\r\n        setShowModal(false);\r\n    }\r\n\r\n    async function saveImage(e) {\r\n        e.preventDefault();\r\n        \r\n        //define the width to resize e.g 600px\r\n        let resizeWidth = 300;//without px\r\n    \r\n        //create a FileReader\r\n        let reader = new FileReader();\r\n    \r\n        //image turned to base64-encoded Data URI.\r\n        reader.readAsDataURL(image);\r\n        reader.name = image.name;//get the image's name\r\n        reader.size = image.size; //get the image's size\r\n        reader.onload = function (event) {\r\n          let img = new Image();//create a image\r\n          img.src = event.target.result;//result is base64-encoded Data URI\r\n          img.name = event.target.name;//set name (optional)\r\n          img.size = event.target.size;//set size (optional)\r\n          img.onload = async function (el) {\r\n            let elem = document.createElement('canvas');//create a canvas\r\n            elem.width = resizeWidth;\r\n            elem.height = resizeWidth;\r\n    \r\n            //draw in canvas\r\n            let ctx = elem.getContext('2d');\r\n            ctx.drawImage(el.target, 0, 0, elem.width, elem.height);\r\n    \r\n            //get the base64-encoded Data URI from the resize image\r\n            let srcEncoded = ctx.canvas.toDataURL('image/png', 1);\r\n    \r\n            //assign it to thumb src\r\n            image.src = srcEncoded;\r\n            /*Now you can send \"srcEncoded\" to the server and\r\n            convert it to a png o jpg. Also can send\r\n            \"el.target.name\" that is the file's name.*/\r\n            try {\r\n                let user = Parse.User.current();\r\n                let file = new Parse.File(image.name, { base64: srcEncoded });\r\n                file.save();\r\n                user.set('image', file);\r\n                try {\r\n                    // Saves the user with the updated data\r\n                    await user.save();\r\n                    window.location.replace(`/profile/${userId}`);\r\n                    console.log('New image saved successfully!');\r\n                    return image;\r\n                } catch (error) {\r\n                    console.error('Error while updating user', error);\r\n                }\r\n            } catch(err) {\r\n                console.log(err.message)\r\n            }\r\n          }\r\n        }\r\n    }\r\n\r\n    async function handleProfileImage(event) {\r\n        console.log(event.target.files[0]);\r\n        setImage(event.target.files[0]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const res = await cardService.countMyCards(userId);\r\n                const currentLevel = await cardService.getUserLevel(userId);\r\n                const created = await cardService.createdAt(userId); \r\n                const image = await authService.getUserImage(userId);\r\n                setImage(image);\r\n                setCount(res);\r\n                setLevel(currentLevel);\r\n                setCreated(created); \r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div className=\"profile-container\">\r\n            <div className=\"user-profile\">\r\n                <div className=\"user-image-container\">\r\n                    <form onSubmit={e => saveImage(e)} className=\"upload-form\">\r\n                        <label htmlFor=\"upload\">\r\n                            <p className=\"picture-paragraph\">Change your profile picture:</p>\r\n                            <input type=\"file\"\r\n                                className=\"upload\"\r\n                                onChange={(event) => { handleProfileImage(event) }}\r\n                                name=\"upload\"\r\n                                accept=\"image/*\"\r\n                                visibility=\"none\"\r\n                            />\r\n                        </label>\r\n                        <button className=\"submit-image\" type=\"submit\">Save image</button>\r\n                    </form>\r\n                    {image && (\r\n                        <img className=\"user-image\" alt=\"user\" onError={(event) => event.target.style.display = 'none'} src={image}></img>\r\n                    )}\r\n                </div>\r\n                <div className=\"user-details\">\r\n                    <h1>{username}</h1>\r\n                    <h3><ion-icon name=\"mail-outline\"></ion-icon><span className=\"user-details-span\"> Email:</span> {email}</h3>\r\n                    <h3><ion-icon name=\"id-card-outline\"></ion-icon><span className=\"user-details-span\"> User Id:</span> {userId}</h3>\r\n                    <h3><ion-icon name=\"star-outline\"></ion-icon><span className=\"user-details-span\"> Contributions made:</span> {count} flashcards</h3>\r\n                    <h3><ion-icon name=\"speedometer-outline\"></ion-icon><span className=\"user-details-span\"> Current level:</span> {level}</h3>\r\n                    <h3><ion-icon name=\"hourglass-outline\"></ion-icon><span className=\"user-details-span\"> Account created at:</span> {created}</h3>\r\n                    <h3><i class=\"fas fa-check-double\"></i> Delete account:</h3>\r\n                    <p>If you don't want to be part of our community anymore, click the button below. Please note that once deleted,\r\n                        your account information cannot be recovered and you will need to re-register.</p>\r\n                    <button onClick={showModalHandler} type=\"button\" className=\"deleteAccount\" name=\"deleteAccount\">Delete account</button>\r\n                </div>\r\n            </div>\r\n            {showModal && <Backdrop onClick={closeModalHandler} />}\r\n            {showModal && <Modal text='Are you sure?' onClose={closeModalHandler} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Flashcard.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport * as cardService from '../../../services/cardService.js';\r\n\r\nfunction Flashcard({ flashcard }) {\r\n    const [ownerName, setOwnerName] = useState();\r\n    let { ownerId } = useParams();\r\n    let id = flashcard.id;\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const res = await cardService.getName(ownerId);\r\n                setOwnerName(res);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const questionElement = <span>\r\n        <h2 className=\"front-category-info\">{flashcard.category}</h2>\r\n        <h2 className=\"question\">Question:</h2>\r\n        <h2 className=\"question-text\">{flashcard.question}</h2>\r\n    </span>;\r\n\r\n    const answerElement =\r\n        <span>\r\n            <h2 className=\"question\">Answer:</h2>\r\n            <p className=\"answer\">{flashcard.answer}</p>\r\n            <Link\r\n                className=\"details-button\"\r\n                to={`/details/${id}`}\r\n                alt=\"details\"\r\n                state={{\r\n                    id: id,\r\n                    question: flashcard.question,\r\n                    answer: flashcard.answer,\r\n                    owner: ownerName,\r\n                    ownerId: ownerId\r\n                }}\r\n            >Read More\r\n            </Link>\r\n        </span>\r\n\r\n    const cover = <div className=\"cover\">\r\n        {questionElement}\r\n    </div>;\r\n    const details = <div className=\"details\">\r\n        {answerElement}\r\n    </div>\r\n\r\n    return (\r\n        <div id={`${id}`} className=\"card\" >\r\n            {cover}\r\n            {details}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Flashcard;","import React, { useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Flashcard from '../User/Flashcard/Flashcard.js';\r\nimport { useAuth } from '../../contexts/AuthContext.js';\r\nimport './FlashcardList.css';\r\n\r\nfunction FlashcardList({ flashcards }) {\r\n    const { user } = useAuth();\r\n    const check = user.username !== '';\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"flashcards-list-container\">\r\n                {check\r\n                    ? <div className='main-categories-links'>\r\n                        <NavLink className={(navData) => navData.isActive ? 'active-main' : 'category-normal-link'} to=\"/flashcards-basic\">\r\n                            Flashcards Basic\r\n                        </NavLink>\r\n                        <NavLink className={(navData) => navData.isActive ? 'active-main' : 'category-normal-link'} to=\"/flashcards-advanced\">\r\n                            | Flashcards Advanced |\r\n                        </NavLink>\r\n                        <NavLink className={(navData) => navData.isActive ? 'active-main' : 'category-normal-link'} to=\"/flashcards-web\">\r\n                            Flashcards Web\r\n                        </NavLink>\r\n                    </div>\r\n                    : ''\r\n                }\r\n\r\n                <div className=\"flashcards-wrapper\">\r\n                    <div className=\"flashcards-container\">\r\n                        {flashcards?.map((flashcard, index) => {\r\n                            return <Flashcard flashcard={flashcard} key={index} />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlashcardList\r\n","import React from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport './PaginationElement.css';\r\n\r\nfunction PaginationElement({ cardsPerPage, totalCards, paginate, previousPage, nextPage, currentPageName }) {\r\n    const pageNumbers = [];\r\n\r\n    for (let index = 1; index <= Math.ceil(totalCards / cardsPerPage); index++) {\r\n        pageNumbers.push(index);\r\n    }\r\n\r\n    return (\r\n        <nav className=\"pagination-nav\">\r\n            <ul className=\"pagination\">\r\n                {pageNumbers.map((number, i) => (\r\n                    <div>\r\n                        <li key={number} className=\"page-item\">\r\n                            <NavLink className={(navData) => navData.isActive ? 'active-pagination' : 'page-link'} to={`/${currentPageName}/${number}`} onClick={() => {\r\n                                paginate(number);\r\n                            }}>\r\n                                {number}\r\n                            </NavLink>\r\n                        </li>\r\n                    </div>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default PaginationElement;","import React from 'react';\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport '../Loader/Loader.css';\r\n\r\nfunction loader(loading) {\r\n    return (\r\n        <div className='blob-section'>\r\n            <div className=\"loader\">\r\n                    <BeatLoader className=\"loading-clip\" color={'#E7D4F6'} loading={loading} size={30} />\r\n                    <h1 className=\"loader-heading\">Loading...</h1>\r\n                </div>\r\n            <div className='blob'>\r\n                <svg viewBox=\"0 0 500 500\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"100%\" id=\"blobSvg\">\r\n                    <defs>\r\n                        <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n                            <stop offset=\"0%\" style={{ \"stop-color\": \"rgb(254, 0, 242\" }}></stop>\r\n                            <stop offset=\"100%\" style={{ \"stop-color\": \"rgb(255, 195, 113\" }}></stop>\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <path fill=\"url(#gradient)\">\r\n                        <animate\r\n                            attributeName='d'\r\n                            dur={'10000ms'}\r\n                            repeatCount={'indefinite'}\r\n                            values='M442,314Q402,378,344,415.5Q286,453,223.5,428.5Q161,404,117.5,359Q74,314,46.5,240Q19,166,85.5,123.5Q152,81,220.5,56Q289,31,364,61Q439,91,460.5,170.5Q482,250,442,314Z; \r\n                            \r\n                            M446.5,326.5Q432,403,358.5,424.5Q285,446,205,456Q125,466,95,391.5Q65,317,56.5,247Q48,177,104,135.5Q160,94,222.5,74Q285,54,343,89Q401,124,431,187Q461,250,446.5,326.5Z;\r\n                            \r\n                            M449.5,313Q400,376,343.5,418.5Q287,461,212.5,452.5Q138,444,100,381Q62,318,55,247Q48,176,95,119Q142,62,212,64Q282,66,352,85.5Q422,105,460.5,177.5Q499,250,449.5,313Z;\r\n                            \r\n                            M426,307Q385,364,336,411.5Q287,459,219.5,439.5Q152,420,116.5,366Q81,312,59,242Q37,172,83.5,107Q130,42,206.5,53Q283,64,346,90.5Q409,117,438,183.5Q467,250,426,307Z;\r\n                            \r\n                            M427,312.5Q399,375,341.5,407.5Q284,440,210,444Q136,448,89.5,386.5Q43,325,30,245Q17,165,73,103Q129,41,205.5,56Q282,71,348,91.5Q414,112,434.5,181Q455,250,427,312.5Z;\r\n                            \r\n                            M448.5,327Q434,404,358.5,421Q283,438,211,440.5Q139,443,101.5,380.5Q64,318,62.5,249.5Q61,181,109.5,136Q158,91,222.5,66.5Q287,42,354.5,73.5Q422,105,442.5,177.5Q463,250,448.5,327Z;\r\n                            \r\n                            M442,314Q402,378,344,415.5Q286,453,223.5,428.5Q161,404,117.5,359Q74,314,46.5,240Q19,166,85.5,123.5Q152,81,220.5,56Q289,31,364,61Q439,91,460.5,170.5Q482,250,442,314Z'\r\n                        ></animate>\r\n                    </path>\r\n                </svg>\r\n            </div>\r\n\r\n            <div className='blob'>\r\n                <svg viewBox=\"0 0 500 500\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"100%\" id=\"blobSvg\">\r\n                    <defs>\r\n                        <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n                            <stop offset=\"0%\" style={{ \"stop-color\": \"rgb(254, 0, 242\" }}></stop>\r\n                            <stop offset=\"100%\" style={{ \"stop-color\": \"rgb(255, 195, 113\" }}></stop>\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <path fill=\"url(#gradient)\">\r\n                        <animate\r\n                            attributeName='d'\r\n                            dur={'10000ms'}\r\n                            repeatCount={'indefinite'}\r\n                            values='M442,314Q402,378,344,415.5Q286,453,223.5,428.5Q161,404,117.5,359Q74,314,46.5,240Q19,166,85.5,123.5Q152,81,220.5,56Q289,31,364,61Q439,91,460.5,170.5Q482,250,442,314Z; \r\n                            \r\n                            M446.5,326.5Q432,403,358.5,424.5Q285,446,205,456Q125,466,95,391.5Q65,317,56.5,247Q48,177,104,135.5Q160,94,222.5,74Q285,54,343,89Q401,124,431,187Q461,250,446.5,326.5Z;\r\n                            \r\n                            M449.5,313Q400,376,343.5,418.5Q287,461,212.5,452.5Q138,444,100,381Q62,318,55,247Q48,176,95,119Q142,62,212,64Q282,66,352,85.5Q422,105,460.5,177.5Q499,250,449.5,313Z;\r\n                            \r\n                            M426,307Q385,364,336,411.5Q287,459,219.5,439.5Q152,420,116.5,366Q81,312,59,242Q37,172,83.5,107Q130,42,206.5,53Q283,64,346,90.5Q409,117,438,183.5Q467,250,426,307Z;\r\n                            \r\n                            M427,312.5Q399,375,341.5,407.5Q284,440,210,444Q136,448,89.5,386.5Q43,325,30,245Q17,165,73,103Q129,41,205.5,56Q282,71,348,91.5Q414,112,434.5,181Q455,250,427,312.5Z;\r\n                            \r\n                            M448.5,327Q434,404,358.5,421Q283,438,211,440.5Q139,443,101.5,380.5Q64,318,62.5,249.5Q61,181,109.5,136Q158,91,222.5,66.5Q287,42,354.5,73.5Q422,105,442.5,177.5Q463,250,448.5,327Z;\r\n                            \r\n                            M442,314Q402,378,344,415.5Q286,453,223.5,428.5Q161,404,117.5,359Q74,314,46.5,240Q19,166,85.5,123.5Q152,81,220.5,56Q289,31,364,61Q439,91,460.5,170.5Q482,250,442,314Z'\r\n                        ></animate>\r\n                    </path>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default loader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FlashcardList from '../FlashcardList/FlashcardList.js';\r\nimport PaginationElement from \"../PaginationElement/PaginationElement.js\";\r\nimport '../Collections/Collections.css';\r\nimport Loader from '../Loader/Loader.js';\r\nimport * as cardService from '../../services/cardService.js';\r\n\r\nfunction Collections() {\r\n    let [all, setAll] = useState([]);\r\n    let [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [cardsPerPage] = useState(6);\r\n    const url = window.location.href;\r\n    const currentPageName = url.split('https://js-flashcards.herokuapp.com/')[1].split('/')[0];\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        window.scrollTo(0, 0);\r\n\r\n        async function fetchAdData() {\r\n            try {\r\n                const res = await cardService.getAllCards();\r\n                setAll(res);\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                }, 4000)\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchAdData();\r\n    }, []);\r\n\r\n    // Get current flashcards\r\n    const indexOfLastCard = currentPage * cardsPerPage;\r\n    const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n    const currentCards = all.slice(indexOfFirstCard, indexOfLastCard);\r\n    const totalPages = Math.ceil(all.length / cardsPerPage);\r\n\r\n    // Change page \r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    function previousPage() {\r\n        let previous = currentPage - 1;\r\n        if (previous < 1 || previous <= 0) {\r\n            previous = 1;\r\n        }\r\n        setCurrentPage(previous);\r\n    }\r\n\r\n    function nextPage() {\r\n        let nextPage = currentPage + 1;\r\n        if (currentPage + 1 > totalPages) {\r\n            nextPage = currentPage;\r\n        }\r\n        setCurrentPage(nextPage);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? <Loader />\r\n                : <div>\r\n                    <h1 className=\"library-title\">Flashcards Library</h1>\r\n                    <h3 className=\"library-info\">The library contains all flashcards created by us or our users. No categorization is attached to the library. Please register as a user to view the flashcards by category or to create your own cards.</h3>\r\n                    {all.length > 0\r\n                        ? <div >\r\n                            <FlashcardList flashcards={currentCards} />\r\n                            <PaginationElement\r\n                                cardsPerPage={cardsPerPage}\r\n                                totalCards={all.length}\r\n                                paginate={paginate}\r\n                                previousPage={previousPage}\r\n                                nextPage={nextPage}\r\n                                currentPageName={currentPageName}\r\n                            />\r\n                        </div>\r\n                        : <div className=\"no-cards\">\r\n                            <div>\r\n                                <h1 className=\"no-cards-heading\">No Flashcards in this category yet.</h1>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Collections;","import React, { useState, useEffect } from \"react\";\r\nimport FlashcardList from '../FlashcardList/FlashcardList.js';\r\nimport Loader from '../Loader/Loader.js';\r\nimport PaginationElement from \"../PaginationElement/PaginationElement.js\";\r\nimport * as cardService from '../../services/cardService.js';\r\n\r\nlet finalArray = [];\r\n\r\nfunction FlashcardsBasic() {\r\n    let [basics, setBasicsCards] = useState(finalArray);\r\n    let [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [cardsPerPage] = useState(6);\r\n    const url = window.location.href;\r\n    const currentPageName = url.split('https://js-flashcards.herokuapp.com/')[1].split('/')[0];\r\n    \r\n    useEffect(() => {\r\n        setLoading(true);\r\n\r\n        async function fetchData() {\r\n            try {\r\n                const res = await cardService.getBasicsCards();\r\n                setBasicsCards(res);\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                }, 2000)\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Get current flashcards\r\n    const indexOfLastCard = currentPage * cardsPerPage;\r\n    const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n    const currentCards = basics.slice(indexOfFirstCard, indexOfLastCard);\r\n    const totalPages = Math.ceil(basics.length / cardsPerPage);\r\n\r\n    // Change page \r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    function previousPage() {\r\n        let previous = currentPage - 1;\r\n        if (previous < 1 || previous <= 0) {\r\n            previous = 1;\r\n        }\r\n        setCurrentPage(previous);\r\n    }\r\n\r\n    function nextPage() {\r\n        let nextPage = currentPage + 1;\r\n        if (currentPage + 1 > totalPages) {\r\n            nextPage = currentPage;\r\n        }\r\n        setCurrentPage(nextPage);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? <Loader />\r\n                : <div>\r\n                    {basics.length > 0\r\n                        ? <div>\r\n                            <FlashcardList flashcards={currentCards} />\r\n                            <PaginationElement cardsPerPage={cardsPerPage} totalCards={basics.length} paginate={paginate} previousPage={previousPage} nextPage={nextPage} currentPageName={currentPageName}/>\r\n                        </div>\r\n                        : <div className=\"no-cards\">\r\n                            <div className=\"left-container\">\r\n                                <h1 className=\"no-cards-heading\">No Flashcards in this category yet.</h1>\r\n                                <h1 className=\"no-cards-heading\">Why don't you create your own flashcards to practice with?</h1>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlashcardsBasic;","import React, { useState, useEffect } from \"react\";\r\nimport PaginationElement from \"../PaginationElement/PaginationElement.js\";\r\nimport * as cardService from '../../services/cardService.js';\r\nimport '../FlashcardsAdvanced/FlashcardsAdvanced.css';\r\nimport FlashcardList from '../FlashcardList/FlashcardList.js';\r\nimport Loader from '../Loader/Loader.js';\r\n\r\nlet finalArray = [];\r\n\r\nfunction FlashcardsAdvanced() {\r\n    let [advanced, setAdvancedCards] = useState(finalArray);\r\n    let [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [cardsPerPage] = useState(6);\r\n    const url = window.location.href;\r\n    const currentPageName = url.split('https://js-flashcards.herokuapp.com/')[1].split('/')[0];\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        async function fetchAdData() {\r\n            try {\r\n                const res = await cardService.getAdvancedCards();\r\n                setAdvancedCards(res);\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                }, 2000)\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchAdData();\r\n    }, []);\r\n\r\n    // Get current flashcards\r\n    const indexOfLastCard = currentPage * cardsPerPage;\r\n    const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n    const currentCards = advanced.slice(indexOfFirstCard, indexOfLastCard);\r\n    const totalPages = Math.ceil(advanced.length / cardsPerPage);\r\n\r\n    // Change page \r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    function previousPage() {\r\n        let previous = currentPage - 1;\r\n        if (previous < 1 || previous <= 0) {\r\n            previous = 1;\r\n        }\r\n        setCurrentPage(previous);\r\n    }\r\n\r\n    function nextPage() {\r\n        let nextPage = currentPage + 1;\r\n        if (currentPage + 1 > totalPages) {\r\n            nextPage = currentPage;\r\n        }\r\n        setCurrentPage(nextPage);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? <Loader />\r\n                : <div>\r\n                    {advanced.length > 0\r\n                        ? <div>\r\n                            <FlashcardList flashcards={currentCards} />\r\n                            <PaginationElement cardsPerPage={cardsPerPage} totalCards={advanced.length} paginate={paginate} previousPage={previousPage} nextPage={nextPage} currentPageName={currentPageName} />\r\n                        </div>\r\n                        : <div className=\"no-cards\">\r\n                            <div className=\"left-container\">\r\n                                <h1 className=\"no-cards-heading\">No Flashcards in this category yet.</h1>\r\n                                <h1 className=\"no-cards-heading\">Why don't you create your own flashcards to practice with?</h1>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlashcardsAdvanced;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport '../FlashcardsWeb/FlashcardsWeb.css';\r\nimport PaginationElement from \"../PaginationElement/PaginationElement.js\";\r\nimport FlashcardList from '../FlashcardList/FlashcardList.js';\r\nimport Loader from '../Loader/Loader.js';\r\nimport * as cardService from '../../services/cardService.js';\r\n\r\nfunction FlashcardsWeb() {\r\n    let [web, setWebCards] = useState([]);\r\n    let [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [cardsPerPage] = useState(6);\r\n    const url = window.location.href;\r\n    const currentPageName = url.split('https://js-flashcards.herokuapp.com/')[1].split('/')[0];\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        async function fetchData() {\r\n            try {\r\n                const res = await cardService.getWebCards();\r\n                setWebCards(res);\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                }, 2000)\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Get current flashcards\r\n    const indexOfLastCard = currentPage * cardsPerPage;\r\n    const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n    const currentCards = web.slice(indexOfFirstCard, indexOfLastCard);\r\n    const totalPages = Math.ceil(web.length / cardsPerPage);\r\n\r\n    // Change page \r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    function previousPage() {\r\n        let previous = currentPage - 1;\r\n        if (previous < 1 || previous <= 0) {\r\n            previous = 1;\r\n        }\r\n        setCurrentPage(previous);\r\n    }\r\n\r\n    function nextPage() {\r\n        let nextPage = currentPage + 1;\r\n        if (currentPage + 1 > totalPages) {\r\n            nextPage = currentPage;\r\n        }\r\n        setCurrentPage(nextPage);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? <Loader />\r\n                : <div>\r\n                    {web.length > 0\r\n                        ? <div>\r\n                            <FlashcardList flashcards={currentCards} />\r\n                            <PaginationElement cardsPerPage={cardsPerPage} totalCards={web.length} paginate={paginate} previousPage={previousPage} nextPage={nextPage} currentPageName={currentPageName}/>\r\n                        </div>\r\n                        : <div className=\"no-cards\">\r\n                            <div className=\"left-container\">\r\n                                <h1 className=\"no-cards-heading\">No Flashcards in this category yet.</h1>\r\n                                <h1 className=\"no-cards-heading\">Why don't you create your own flashcards to practice with?</h1>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlashcardsWeb;\r\n","import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport notification from '../../../helpers/notification.js';\r\nimport * as cardService from '../../../services/cardService.js';\r\nimport { useAuth } from '../../../contexts/AuthContext.js';\r\nimport './Edit.css';\r\n\r\nconst options = [\r\n    { value: 'JS Basics', text: 'JS Basics' },\r\n    { value: 'JS Advanced', text: 'JS Advanced' },\r\n    { value: 'JS Web', text: 'JS Web' },\r\n]\r\n\r\nfunction Edit() {\r\n    const { user } = useAuth();\r\n    const location = useLocation();\r\n    const [error, setError] = useState(false);\r\n    const [validate, setValidate] = useState(false);\r\n    const [questionEdit, setQuestionEdit] = useState();\r\n    const [answerEdit, setAnswerEdit] = useState();\r\n    const [categoryEdit, setCategoryEdit] = useState();\r\n    const { id } = location.state;\r\n    const { question } = location.state;\r\n    const { answer } = location.state;\r\n    const navigate = useNavigate();\r\n\r\n    async function onEdit(e) {\r\n        e.preventDefault();\r\n        const data = { questionEdit, answerEdit, categoryEdit };\r\n\r\n        if (validate === false) {\r\n            cardService.onEdit(id, data)\r\n                .then(result => {\r\n                    navigate(-1,\r\n                        {\r\n                            state: {\r\n                                id: id,\r\n                                question: questionEdit,\r\n                                answer: answerEdit,\r\n                                category: categoryEdit\r\n                            }\r\n                        }\r\n                    );\r\n                    setError(false);\r\n                })\r\n        } else {\r\n            notification(\"Error!\", \"Please fill in all fields first\");\r\n        }\r\n    }\r\n\r\n    function fieldValidation(e) {\r\n        let currentField = e.target.value;\r\n        if (currentField === '') {\r\n            setValidate(true);\r\n        } else {\r\n            setValidate(false)\r\n        }\r\n    }\r\n\r\n    function cancel() {\r\n        return navigate(-1);\r\n    }\r\n\r\n    if (user === '') {\r\n        return navigate('/login');\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit\">\r\n            <form className=\"edit-form\" onSubmit={e => onEdit(e)}>\r\n                {error && (\r\n                    <div>Error: Missing data. Please edit all fields!</div>\r\n                )}\r\n                <h1>Edit your Flashcard</h1>\r\n                <label className=\"create-form-label\" htmlFor=\"category\">Edit Category:</label><br />\r\n                <span className=\"category-select\">\r\n                    <select name=\"category\" id=\"category\" defaultValue={options[1]} onChange={e => setCategoryEdit(e.target.value)} >\r\n                        {options.map(x => <option key={x.value} value={x.value}>{x.text}</option>)}\r\n                    </select>\r\n                </span>\r\n                <div>\r\n                    <label className=\"create-form-label\" htmlFor={question}>Update Question:</label><br></br>\r\n                    <textarea id=\"question-area\" placeholder=\"Edit question\" name=\"question\" defaultValue={question} onChange={e => setQuestionEdit(e.target.value)} onBlur={fieldValidation} style={{ borderColor: validate.question ? '#ff2ae0' : 'inherit' }}></textarea>\r\n                </div>\r\n                <div>\r\n                    <label className=\"create-form-label\" htmlFor={answer}>Update Answer:</label><br></br>\r\n                    <textarea id=\"answer-area\" placeholder=\"Edit answer\" name=\"answer\" defaultValue={answer} onChange={e => setAnswerEdit(e.target.value)} onBlur={fieldValidation} style={{ borderColor: validate.answer ? '#ff2ae0' : 'inherit' }}></textarea>\r\n                </div>\r\n                <button className=\"editBtn\" type=\"submit\">Edit</button>\r\n                <button onClick={cancel} className=\"editBtn\">Cancel</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Edit;\r\n","export default __webpack_public_path__ + \"static/media/create.37768092.png\";","import React, { useState } from 'react';\r\nimport * as cardService from '../../../services/cardService.js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport levelPicture from '../../../images/create.png';\r\nimport notification from '../../../helpers/notification.js';\r\nimport './Create.css';\r\n\r\nconst options = [\r\n    { value: 'JS Basics', text: 'JS Basics' },\r\n    { value: 'JS Advanced', text: 'JS Advanced' },\r\n    { value: 'JS Web', text: 'JS Web' },\r\n]\r\n\r\nfunction Create() {\r\n    const [error, setError] = useState(false);\r\n    console.log(error);\r\n    const [validate, setValidate] = useState(false);\r\n    const owner = localStorage.getItem('userId');\r\n    const navigate = useNavigate();\r\n\r\n    async function onCreate(e) {\r\n        e.preventDefault();\r\n        let formData = new FormData(e.currentTarget);\r\n        let category = formData.get('category');\r\n        let question = formData.get('question');\r\n        let answer = formData.get('answer');\r\n\r\n        let data = { category, question, answer, owner };\r\n\r\n        if (category !== '' || question !== '' || answer !== '') {\r\n            setValidate(true);\r\n            setError(false);\r\n        } else {\r\n            setValidate(false);\r\n            setError(true);\r\n            return;\r\n        }\r\n\r\n        if (validate === true) {\r\n            cardService.create(data)\r\n                .then(result => {\r\n                    navigate(`/my-cards/${owner}`, { replace: true });\r\n                })\r\n            setError(false);\r\n        } else {\r\n            notification(\"Error!\", \"Flashcard fields cannot be empty\");\r\n            setError(true);\r\n        }\r\n    }    \r\n\r\n    return (\r\n        <div className=\"create-container\">\r\n            <div className=\"create\">\r\n                <form onSubmit={e => onCreate(e)} className=\"create-form\">\r\n                    <h1>Create your own Flashcard</h1>\r\n                    <label className=\"create-form-label\" htmlFor=\"category\">Select category:</label><br />\r\n                    <span className=\"category-select\">\r\n                        <select name=\"category\" id=\"category\" defaultValue={options[1]}>\r\n                            {options.map(x => <option key={x.value} value={x.value}>{x.text}</option>)}\r\n                        </select>\r\n                    </span>\r\n                    <div>\r\n                        <label className=\"create-form-label\">Write a question: </label><br></br>\r\n                        <textarea id=\"question\" placeholder=\"Enter question\" name=\"question\"></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"create-form-label\">Provide an answer: </label><br></br>\r\n                        <textarea id=\"answer\" placeholder=\"Enter answer\" name=\"answer\"></textarea>\r\n                    </div>\r\n                    <button className=\"createBtn\" type=\"submit\">Create</button>\r\n                </form>\r\n            </div>\r\n            <div className='level-info'>\r\n                <h2>Flashcard Creation</h2>\r\n                <ul>\r\n                    <li>Please create new flashcards with care and responsibility. Remember that other people will see their content as well as the name of their creator...</li>\r\n                    <li>Create more and more cards and see how your personal level grows.</li>\r\n                    <li> For every 5 cards created, your title will change.</li>\r\n                    <li>You can see the current level you have been awarded on your personal profile page.</li>\r\n                    <li>Current maximum level is 100 - High Emperor - the one who rules our World of JavaScript! <i class=\"fas fa-crown\"></i></li>\r\n                </ul>\r\n                <img className=\"create-image\" src={levelPicture} alt=\"create\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create;\r\n","import React from 'react';\r\nimport '../OwnerFlashcard/OwnerFlashcard.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction OwnerFlashcard({ ownerFlashcard }) {\r\n    const questionElement = <span>\r\n        <h2 className=\"front-category-info\">{ownerFlashcard.category}</h2>\r\n        <h2 className=\"question\">Question:</h2>\r\n        <h2 className=\"question-text\">{ownerFlashcard.question}</h2>\r\n    </span>;\r\n\r\n    const answerElement = <span>\r\n        <h2 className=\"question\">Answer:</h2>\r\n        <p className=\"answer\">{ownerFlashcard.answer}</p>\r\n        <Link\r\n            className=\"details-button\"\r\n            to={`/details/${ownerFlashcard.owner.objectId}/${ownerFlashcard.objectId}`}\r\n            alt=\"details\"\r\n            state={{\r\n                id: ownerFlashcard.id,\r\n                question: ownerFlashcard.question,\r\n                answer: ownerFlashcard.answer,\r\n                owner: ownerFlashcard.owner.username\r\n            }}\r\n        >Read More\r\n        </Link>\r\n    </span>\r\n\r\n    const cover = <div className=\"cover\">\r\n        {questionElement}\r\n    </div>;\r\n    const details = <div className=\"details\">\r\n        {answerElement}\r\n    </div>\r\n\r\n    return (\r\n        <div className=\"card\" >\r\n            {cover}\r\n            {details}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OwnerFlashcard;","import React from 'react'\r\nimport OwnerFlashcard from '../OwnerFlashcard/OwnerFlashcard.js';\r\nimport './OwnerFlashcardList.css';\r\n\r\nfunction OwnerFlashcardList({ flashcards }) {\r\n    return (\r\n        <div>\r\n            <div className=\"flashcards-list-container\">\r\n                <div className=\"flashcards-wrapper\">\r\n                    <div className=\"flashcards-container\">\r\n                        {flashcards?.map((ownerFlashcard, index) => {\r\n                            return <OwnerFlashcard ownerFlashcard={ownerFlashcard} key={index} />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OwnerFlashcardList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport OwnerFlashcardList from '../OwnerFlashcardList/OwnerFlashcardList.js';\r\nimport PaginationElement from \"../../PaginationElement/PaginationElement.js\";\r\nimport * as cardService from '../../../services/cardService.js';\r\nimport Loader from '../../Loader/Loader.js';\r\nimport '../MyCards/MyCards.css';\r\n\r\nconst options = [\r\n    { value: 'JS Basics', text: 'JS Basics' },\r\n    { value: 'JS Advanced', text: 'JS Advanced' },\r\n    { value: 'JS Web', text: 'JS Web' },\r\n]\r\n\r\nfunction MyCards() {\r\n    let [cards, setCards] = useState([]);\r\n    let [filteredCards, setFilteredCards] = useState([]);\r\n    let [loading, setLoading] = useState(false);\r\n    let [isFiltered, setIsFiltered] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [cardsPerPage] = useState(6);\r\n    const userId = localStorage.getItem('userId');\r\n    const url = window.location.href;\r\n    const currentPageName = url.split('https://js-flashcards.herokuapp.com/')[1].split('/')[0];\r\n    let categoryName = '';\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        window.scrollTo(0, 0);\r\n\r\n        async function fetchWebData() {\r\n            try {\r\n                const res = await cardService.getMyCards(userId);\r\n                setCards(res);\r\n                setIsFiltered(false);\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                }, 2000)\r\n                return () => { setLoading(false) };\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchWebData();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    // Get current flashcards\r\n    const indexOfLastCard = currentPage * cardsPerPage;\r\n    const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n    let currentCards = [];\r\n    let totalPages = 0;\r\n    let totalCards = 0;\r\n\r\n    if (isFiltered === false) {\r\n        currentCards = cards.slice(indexOfFirstCard, indexOfLastCard);\r\n        totalPages = Math.ceil(cards.length / cardsPerPage);\r\n        totalCards = cards.length;\r\n    } else {\r\n        currentCards = filteredCards.slice(indexOfFirstCard, indexOfLastCard);\r\n        totalPages = Math.ceil(filteredCards.length / cardsPerPage);\r\n        totalCards = filteredCards.length;\r\n    }\r\n\r\n    // Change page \r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    function previousPage() {\r\n        let previous = currentPage - 1;\r\n        if (previous < 1 || previous <= 0) {\r\n            previous = 1;\r\n        }\r\n        setCurrentPage(previous);\r\n    }\r\n\r\n    function nextPage() {\r\n        let nextPage = currentPage + 1;\r\n        if (currentPage + 1 > totalPages) {\r\n            nextPage = currentPage;\r\n        }\r\n        setCurrentPage(nextPage);\r\n    }\r\n\r\n    async function onFilter(e) {\r\n        e.preventDefault();\r\n        let formData = new FormData(e.currentTarget);\r\n        let category = formData.get('category');\r\n        categoryName = category;\r\n        const filtered = await cardService.filterCards(categoryName);\r\n        setFilteredCards(filtered);\r\n        setIsFiltered(true);\r\n    }\r\n\r\n    function reload() {\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div className=\"my-cards-container\">\r\n            {loading\r\n                ? <Loader />\r\n                : <div>\r\n                    {currentCards.length > 0\r\n                        ? <div>\r\n                            <div className=\"card-list-titles\">\r\n                            <h1>Ready to Test your JavaScript knowledge?</h1>\r\n                            </div>\r\n                            <form onSubmit={e => onFilter(e)}>\r\n                                <label className=\"filter-form-label\" htmlFor=\"category\">Filter flashcards by category:</label><br />\r\n                                <span className=\"category-choose\">\r\n                                    <select name=\"category\" className=\"category-choose-select\" defaultValue={options[1]} >\r\n                                        {options.map(x => <option key={x.value} value={x.value}>{x.text}</option>)}\r\n                                    </select>\r\n                                </span><br />\r\n                                <button className=\"filterBtn\" type=\"submit\">Filter</button><br />\r\n                            </form>\r\n                                <button onClick={reload} className=\"filterBtn\" type=\"submit\">Load all cards</button>\r\n                            <OwnerFlashcardList flashcards={currentCards} />\r\n                            <PaginationElement\r\n                                cardsPerPage={cardsPerPage}\r\n                                totalCards={totalCards}\r\n                                paginate={paginate}\r\n                                previousPage={previousPage}\r\n                                nextPage={nextPage}\r\n                                currentPageName={currentPageName}\r\n                            />\r\n                        </div>\r\n                        : <div className=\"no-cards\">\r\n                            <div className=\"left-container\">\r\n                                <h1 className=\"no-cards-heading\">No Flashcards in this category yet.</h1>\r\n                                <h1 className=\"no-cards-heading\">Why don't you create your own flashcards to practice with?</h1>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyCards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FlashcardList from '../../FlashcardList/FlashcardList.js';\r\nimport PaginationElement from \"../../PaginationElement/PaginationElement.js\";\r\nimport Loader from '../../Loader/Loader.js';\r\nimport '../Practice/Practice.css';\r\nimport * as cardService from '../../../services/cardService.js';\r\nlet practiceList = [];\r\nconst userId = localStorage.getItem('userId');\r\n\r\n\r\nfunction Practice() {\r\n    let [practiceCards, setPracticeCards] = useState(practiceList);\r\n    let [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [cardsPerPage] = useState(6);\r\n    const url = window.location.href;\r\n    const currentPageName = url.split('https://js-flashcards.herokuapp.com/')[1].split('/')[0];\r\n    \r\n    // Get current flashcards\r\n    const indexOfLastCard = currentPage * cardsPerPage;\r\n    const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n    const currentCards = practiceCards.slice(indexOfFirstCard, indexOfLastCard);\r\n    const totalPages = Math.ceil(practiceCards.length / cardsPerPage);\r\n\r\n    // Change page \r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    function previousPage() {\r\n        let previous = currentPage - 1;\r\n        if (previous < 1 || previous <= 0) {\r\n            previous = 1;\r\n        }\r\n        setCurrentPage(previous);\r\n    }\r\n\r\n    function nextPage() {\r\n        let nextPage = currentPage + 1;\r\n        if (currentPage + 1 > totalPages) {\r\n            nextPage = currentPage;\r\n        }\r\n        setCurrentPage(nextPage);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        window.scrollTo(0, 0);\r\n        async function fetchWebData() {\r\n            try {\r\n                const res = await cardService.getPracticeList(userId);\r\n                setPracticeCards(res);\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                }, 2000);\r\n                return () => { setLoading(false) };\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchWebData();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? <Loader />\r\n                : <div>\r\n                    {practiceCards.length > 0\r\n                        ? <div>\r\n                            <h2 className=\"practice-title\">Your Practice List</h2>\r\n                            <FlashcardList flashcards={currentCards} />\r\n                            <PaginationElement cardsPerPage={cardsPerPage} totalCards={practiceCards.length} paginate={paginate} previousPage={previousPage} nextPage={nextPage} currentPageName={currentPageName} />\r\n                        </div>\r\n                        : <div className=\"no-cards\">\r\n                            <div className=\"left-container\">\r\n                                <h1 className=\"no-cards-heading\">There are currently no Flashcards in your Practice List yet.</h1>\r\n                                <h1 className=\"no-cards-heading\">Why don't you browse our library of flashcards to start adding them to your list?</h1>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Practice;","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport * as cardService from '../../../services/cardService.js';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport notification from '../../../helpers/notification.js';\r\nimport '../Details/Details.css';\r\n\r\nfunction Details() {\r\n    let { id } = useParams();\r\n    let [currentQuestion, setCurrentQuestion] = useState('');\r\n    let [currentAnswer, setCurrentAnswer] = useState('');\r\n    let [currentOwner, setCurrentOwner] = useState('');\r\n    let [currentCategory, setCurrentCategory] = useState('');\r\n    let [check, setCheck] = useState(false);\r\n    const [add, setAdd] = useState(false);\r\n    const localStorageOwnerId = localStorage.getItem('userId');\r\n    let currentCardOwnerId = '';\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const currentCard = await cardService.getCard(id);\r\n                const currentCardOwnerId = currentCard.owner.id;\r\n                const ownerName = await cardService.getName(currentCardOwnerId);\r\n                setCurrentQuestion(currentCard.question);\r\n                setCurrentAnswer(currentCard.answer);\r\n                setCurrentOwner(ownerName);\r\n                setCurrentCategory(currentCard.category);\r\n                setCheck(currentCardOwnerId === localStorageOwnerId);\r\n                const res = await cardService.updateCardDetails(id, currentCardOwnerId);\r\n                setCurrentQuestion(res.question);\r\n                setCurrentAnswer(res.answer);\r\n                let foundCard = await cardService.checkIfInPracticeList(id, currentOwner);\r\n                if (foundCard) {\r\n                    setAdd(true);\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    const ownerElement = <div className=\"details-card\">\r\n        <h2 className=\"details\"><span className=\"details-title\">Flashcard Details:</span></h2>\r\n        <h2 className=\"details-heading\"><span className=\"details-title\">Flashcard id:</span> {id}</h2>\r\n        <h2 className=\"details-heading\"><span className=\"details-title\">Category:</span> {`${currentCategory}`}</h2>\r\n        <h2 className=\"details-heading\"><span className=\"details-title\">Question:</span> {currentQuestion}</h2>\r\n        <h2 className=\"details-heading\"><span className=\"details-title\">Answer:</span> {currentAnswer}</h2>\r\n        <div><h2 className=\"details-heading\"><span className=\"details-title\">Creator:</span> {currentOwner}</h2></div>\r\n        {localStorageOwnerId\r\n            ?\r\n            <div className=\"buttons\">\r\n                <Link\r\n                    onClick={onDelete}\r\n                    alt=\"delete-page\"\r\n                    className=\"flashcard-buttons\"\r\n                    to={`/delete/${id}`}\r\n                >Delete\r\n                </Link>\r\n                <Link\r\n                    className=\"flashcard-buttons\"\r\n                    to={`/edit/${id}`}\r\n                    alt=\"edit-page\"\r\n                    state={{\r\n                        id: id,\r\n                        question: currentQuestion,\r\n                        answer: currentAnswer,\r\n                        ownerId: currentCardOwnerId\r\n                    }}\r\n                >Edit</Link>\r\n            </div>\r\n            : <div></div>\r\n        }\r\n    </div>\r\n\r\n    const userElement = <div className=\"details-card\">\r\n        <h2 className=\"details\"><span className=\"details-title\">Flashcard Details:</span></h2>\r\n        <h2 className=\"details-heading\"><span className=\"details-title\">Flashcard id:</span> {id}</h2>\r\n        <h2 className=\"details-heading\"><span className=\"details-title\">Category:</span> {`${currentCategory}`}</h2>\r\n        <h2 className=\"details-heading\"><span className=\"details-title\">Question:</span> {currentQuestion}</h2>\r\n        <h2 className=\"details-heading\"><span className=\"details-title\">Answer:</span> {currentAnswer}</h2>\r\n        <div><h2 className=\"details-heading\"><span className=\"details-title\">Creator:</span> {currentOwner}</h2></div>\r\n        {localStorageOwnerId\r\n            ? <div>\r\n                {!add\r\n                    ? <div className=\"buttons\">\r\n                        <Link\r\n                            className=\"flashcard-buttons\"\r\n                            to={`/practice/${localStorageOwnerId}`}\r\n                            alt=\"practice\"\r\n                            onClick={() => {\r\n                                cardService.practice(id);\r\n                            }}\r\n                        >Practice\r\n                        </Link>\r\n                    </div>\r\n                    : <div className=\"buttons\">\r\n                        <Link\r\n                            className=\"button-disabled\"\r\n                            to={`/details/${id}`}\r\n                            alt=\"details\"\r\n                            onClick={(event) => event.preventDefault()}\r\n                        ><ion-icon name=\"alert-circle-outline\"></ion-icon> Card already in your List\r\n                        </Link>\r\n                        <Link\r\n                            onClick={onRemove}\r\n                            className=\"button-remove\"\r\n                            to={`/practice/${localStorageOwnerId}`}\r\n                            alt=\"practice-list\"\r\n                            state={{\r\n                                id: id,\r\n                                question: currentQuestion,\r\n                                answer: currentAnswer,\r\n                                ownerId: currentCardOwnerId\r\n                            }}\r\n                        >Remove card from practice\r\n                        </Link>\r\n                    </div>\r\n                }\r\n            </div>\r\n            : <div></div>\r\n        }\r\n    </div>\r\n\r\n    async function onDelete(e) {\r\n        e.preventDefault();\r\n        await cardService.deleteCard(id)\r\n            .then(result => {\r\n                navigate(-1);\r\n            })\r\n    }\r\n\r\n    async function onRemove(e) {\r\n        e.preventDefault();\r\n\r\n        await cardService.removeCardFromPractice(id, localStorageOwnerId)\r\n            .then(result => {\r\n                setTimeout(() => {\r\n                    notification(\"Success!\", \"Card removed from your practice list\");\r\n                }, 3000);\r\n            })\r\n    }\r\n\r\n    if (currentOwner === undefined || currentOwner === null) {\r\n        currentOwner = 'Unknown';\r\n    }\r\n\r\n    return (\r\n        <div className=\"details-container animate__animated animate__slideInRight\">\r\n            <div className=\"cube\">\r\n                <div className=\"top\"></div>\r\n                <div>\r\n                    <span className=\"spanOne\">{currentQuestion}</span>\r\n                    <span className=\"spanTwo\">{currentQuestion}</span>\r\n                    <span className=\"spanThree\">{currentQuestion}</span>\r\n                    <span className=\"spanFour\">{currentQuestion}</span>\r\n                </div>\r\n            </div>\r\n            {check\r\n                ? ownerElement\r\n                : userElement\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport * as cardService from '../../../services/cardService.js';\r\nimport './OwnerDetails.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nfunction OwnerDetails() {\r\n    let { id } = useParams();\r\n    let { ownerId } = useParams();\r\n    let [currentQuestion, setCurrentQuestion] = useState('');\r\n    let [currentAnswer, setCurrentAnswer] = useState('');\r\n    let [currentOwner, setCurrentOwner] = useState('');\r\n    let [currentCategory, setCurrentCategory] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const currentCard = await cardService.getCard(id);\r\n                const currentCardOwnerId = currentCard.owner.id;\r\n                const ownerName = await cardService.getName(currentCardOwnerId);\r\n                setCurrentQuestion(currentCard.question);\r\n                setCurrentAnswer(currentCard.answer);\r\n                setCurrentOwner(ownerName);\r\n                setCurrentCategory(currentCard.category);\r\n                const res = await cardService.updateCardDetails(id, ownerId);\r\n                setCurrentQuestion(res.question);\r\n                setCurrentAnswer(res.answer);\r\n            } catch (err) {\r\n                console.log(err);;\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    async function onDelete(e) {\r\n        e.preventDefault();\r\n        cardService.deleteCard(id)\r\n        .then(result => {\r\n            navigate(-1);\r\n        }); \r\n    }\r\n\r\n    return (\r\n        <div className=\"details-container animate__animated animate__slideInRight\">\r\n            <div className=\"cube\">\r\n                <div className=\"top\"></div>\r\n                <div>\r\n                    <span className=\"spanOne\">{`${currentQuestion}`}</span>\r\n                    <span className=\"spanTwo\">{`${currentQuestion}`}</span>\r\n                    <span className=\"spanThree\">{`${currentQuestion}`}</span>\r\n                    <span className=\"spanFour\">{`${currentQuestion}`}</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"details-card\">\r\n                <h2 className=\"details\"><span className=\"details-title\">Flashcard Details:</span></h2>\r\n                <h2 className=\"details-heading\"><span className=\"details-title\">Flashcard id:</span> {`${id}`}</h2>\r\n                <h2 className=\"details-heading\"><span className=\"details-title\">Category:</span> {`${currentCategory}`}</h2>\r\n                <h2 className=\"details-heading\"><span className=\"details-title\">Question:</span> {`${currentQuestion}`}</h2>\r\n                <h2 className=\"details-heading\"><span className=\"details-title\">Answer:</span> {`${currentAnswer}`}</h2>\r\n                <h2 className=\"details-heading\"><span className=\"details-title\">Creator:</span> {`${currentOwner}`}</h2>\r\n\r\n                <div className=\"buttons\">\r\n                    <Link onClick={onDelete} alt=\"delete-page\" className=\"flashcard-buttons\" to={`/delete/${id}`}>Delete</Link>\r\n                    <Link className=\"flashcard-buttons\"\r\n                        to={`/edit/${id}`}\r\n                        alt=\"edit-page\"\r\n                        state={{\r\n                            id: id,\r\n                            question: currentQuestion,\r\n                            answer: currentAnswer,\r\n                            ownerId: ownerId,\r\n                            category: currentCategory,\r\n                        }}\r\n                    >Edit</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OwnerDetails;\r\n","import React from 'react';\r\nimport '../Footer/Footer.css';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <div className='left-footer'>\r\n                <small>Copyright &copy; 2021 |\r\n                    <a className=\"links\" href=\"https://github.com/KumihoBG\" target=\"_blanc\"> Pavleta Taseva (KumihoBG)</a><br />\r\n                    Credits to <a className=\"links\" href=\"https://www.youtube.com/channel/UCbwXnUipZsLfUckBPsC7Jog\" target=\"_blanc\"> Online Tutorials - YouTube Channel</a>\r\n                    <br></br>\r\n                    Credits to <a className=\"links\" href=\"http://www.freepik.com\"> vectorjuice / Freepik</a>\r\n                </small>\r\n            </div>\r\n            <div className='right-footer'>\r\n                <small>\r\n                    <p>Email: pavleta.taseva@gmail.com</p>\r\n                    <a rel=\"noreferrer\" target=\"_blank\" href=\"https://www.facebook.com/kumiho.bg/\"><i className=\"fab fa-facebook fa-2x\"></i>\r\n                    </a><a rel=\"noreferrer\" target=\"_blank\" href=\"https://twitter.com/PRTSFBG\"><i className=\"fab fa-twitter fa-2x\"></i></a>\r\n                    <a rel=\"noreferrer\" target=\"_blank\" href=\"https://www.instagram.com/pavletataseva/\"><i className=\"fab fa-instagram fa-2x\"></i></a>\r\n                </small>\r\n            </div>\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../NotFoundPage/NotFoundPage.css';\r\n\r\nconst NotFoundPage = () => (\r\n  <div className=\"not-found-page-container\">\r\n    <div className=\"sad-face\"></div>\r\n    <h1>404 - Page Not Found</h1>\r\n    <h4>Ops, looks like this page is broken or doesn't exist anymore! We can't be sure what went wrong and whose fault it was for all this to happen.</h4>\r\n    <Link className=\"not-found-link\" to=\"/\">\r\n        <ion-icon name=\"arrow-undo-outline\"></ion-icon> Go Home\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nexport default NotFoundPage;","import { Navigate, Outlet } from 'react-router-dom';\r\nimport * as authService from '../services/authService.js';\r\n\r\nconst PrivateRoute = () => {\r\n   const isAuthenticated = authService.isAuthenticated();\r\n\r\n    return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" />\r\n}\r\n\r\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport Category from './components/User/Category/Category.js';\nimport Navbar from './components/Navbar/Navbar.js';\nimport Home from './components/User/Home/Home.js';\nimport LandingPage from './components/Guest/LandingPage/LandingPage.js';\nimport Register from './components/User/Register/Register.js';\nimport Login from './components/User/Login/Login.js';\nimport Profile from './components/User/Profile/Profile.js';\nimport Collections from './components/Collections/Collections.js';\nimport FlashcardsBasic from './components/FlashcardsBasic/FlashcardsBasic.js';\nimport FlashcardsAdvanced from './components/FlashcardsAdvanced/FlashcardsAdvanced.js';\nimport FlashcardsWeb from './components/FlashcardsWeb/FlashcardsWeb.js';\nimport Edit from './components/Owner/Edit/Edit.js';\nimport Create from './components/Owner/Create/Create.js';\nimport MyCards from './components/Owner/MyCards/MyCards.js';\nimport Practice from './components/User/Practice/Practice.js';\nimport Details from './components/User/Details/Details.js';\nimport OwnerDetails from './components/Owner/OwnerDetails/OwnerDetails.js';\nimport Footer from './components/Footer/Footer.js';\nimport ReactNotification from 'react-notifications-component';\nimport NotFoundPage from './components/NotFoundPage/NotFoundPage.js';\nimport { AuthProvider } from './contexts/AuthContext.js';\nimport PrivateRoutes from './helpers/PrivateRoutes.js';\nimport 'react-notifications-component/dist/theme.css';\n\nfunction App() {\n\n  return (\n<AuthProvider>\n        <div className=\"App\">\n          <ReactNotification />\n          <Navbar />\n          <main>\n            <Routes>\n              <Route path='/' element={<LandingPage />} />\n              <Route path='/register' element={<Register />} />\n              <Route path='/login' element={<Login />} />\n              <Route path='/collections' element={<Collections />} />\n              <Route path='/collections/:number' element={<Collections />} />\n              <Route path='/details/:id' element={<Details />} />\n              <Route element={<PrivateRoutes />}>\n              <Route path='/home' element={<Home />}>\n                <Route path='/home/categories' element={<Category />} />\n              </Route>\n                <Route path='/profile/:userId' element={<Profile />} />\n                <Route path='/flashcards-basic' element={<FlashcardsBasic />} />\n                <Route path='/flashcards-basic/:number' element={<FlashcardsBasic />} />\n                <Route path='/flashcards-advanced' element={<FlashcardsAdvanced />} />\n                <Route path='/flashcards-advanced/:number' element={<FlashcardsAdvanced />} />\n                <Route path='/flashcards-web' element={<FlashcardsWeb />} />\n                <Route path='/flashcards-web/:number' element={<FlashcardsWeb />} />\n                <Route path='/flashcards/create' element={<Create />} />\n                <Route path='/details/:ownerId/:id' element={<OwnerDetails />} />\n                <Route path='/my-cards/:userId' element={<MyCards />} />\n                <Route path='/my-cards/:number' element={<MyCards />} />\n                <Route path='/practice/:userId' element={<Practice />} />\n                <Route path='/practice/:number' element={<Practice />} />\n                <Route path='/edit/:id' element={<Edit />} />\n              </Route>\n              <Route path='*' element={<NotFoundPage />} />\n            </Routes>\n          </main>\n          <Footer />\n        </div>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}