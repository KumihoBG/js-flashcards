{"ast":null,"code":"import Parse from 'parse/dist/parse.min.js';\nexport const settings = {\n  host: ''\n};\nexport async function request(url, options) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.ok === false) {\n      const error = await response.json();\n      alert(error.message);\n      throw new Error(error.message);\n    }\n\n    try {\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      return response;\n    }\n  } catch (error) {\n    alert(error.message);\n    throw error;\n  }\n}\n\nfunction getOptions() {\n  let method = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'get';\n  let body = arguments.length > 1 ? arguments[1] : undefined;\n  const token = localStorage.getItem('authToken');\n  const options = {\n    method,\n    headers: {\n      'X-Parse-Application-Id': '48BkBrVWc2vgaWll9O6ktpdDS4SKQoJla55qCjPq',\n      'X-Parse-REST-API-Key': 'olOWe8T6CIAopabzFFs06fBqVMWQNu2C5eo8I35m',\n      'X-Parse-Revocable-Session': '1',\n      'X-Parse-Session-Token': token\n    }\n  };\n\n  if (body) {\n    options.headers['Content-Type'] = 'application/json';\n    options.body = JSON.stringify(body);\n  }\n\n  return options;\n}\n\nexport async function getRequest(url) {\n  return await request(url, getOptions());\n}\nexport async function postRequest(url, data) {\n  return await request(url, getOptions('post', data));\n}\nexport async function putRequest(url, data) {\n  return await request(url, getOptions('put', data));\n}\nexport async function deleteRequest(url) {\n  return await request(url, getOptions('delete'));\n}\nexport async function login(username, password) {\n  try {\n    let user = await Parse.User.logIn(username, password);\n    const email = user.get('email');\n\n    if (user.get('emailVerified')) {\n      const currentUser = Parse.User.current();\n      const sessionToken = currentUser.getSessionToken();\n      localStorage.setItem('username', username);\n      localStorage.setItem('authToken', sessionToken);\n      localStorage.setItem('userId', currentUser.id);\n      localStorage.setItem('email', email);\n    }\n  } catch (error) {\n    Parse.User.logOut();\n    console.log('User logged in. Please verify your email first'); // return notify(error);\n  }\n}\nexport async function register(username, email, password) {\n  const user = new Parse.User();\n  user.set('username', username);\n  user.set('email', email);\n  user.set('password', password);\n\n  try {\n    await user.signUp();\n    Parse.User.logOut();\n    localStorage.setItem('email', email);\n    alert(\"Email must be verified. Please, visit your mail inbox for further instructions.\");\n  } catch (error) {\n    alert(\"Ops, something went wrong: \" + error);\n    console.error(error);\n  }\n}\nexport async function logout() {\n  try {\n    Parse.User.logOut();\n    alert('You\\'ve been logged out.');\n    localStorage.removeItem('username');\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('email');\n  } catch (error) {\n    alert('Ops, something went wrong. Try again, please!');\n    console.error(error);\n  }\n}","map":{"version":3,"sources":["C:/Users/PC/Desktop/React/js-flashcards/client/src/api/api.js"],"names":["Parse","settings","host","request","url","options","response","fetch","ok","error","json","alert","message","Error","data","getOptions","method","body","token","localStorage","getItem","headers","JSON","stringify","getRequest","postRequest","putRequest","deleteRequest","login","username","password","user","User","logIn","email","get","currentUser","current","sessionToken","getSessionToken","setItem","id","logOut","console","log","register","set","signUp","logout","removeItem"],"mappings":"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","sourcesContent":["import Parse from 'parse/dist/parse.min.js';\r\n\r\nexport const settings = {\r\n    host: '',\r\n};\r\n\r\nexport async function request(url, options) {\r\n    try {\r\n        const response = await fetch(url, options);\r\n\r\n        if (response.ok === false) {\r\n            const error = await response.json();\r\n            alert(error.message);\r\n            throw new Error(error.message);\r\n        }\r\n\r\n        try {\r\n            const data = await response.json();\r\n            return data;\r\n        } catch (error) {\r\n            return response;\r\n        }\r\n    } catch (error) {\r\n        alert(error.message);\r\n        throw error;\r\n    }\r\n}\r\n\r\nfunction getOptions(method = 'get', body) {\r\n    const token = localStorage.getItem('authToken');\r\n\r\n    const options = {\r\n        method,\r\n        headers: {\r\n            'X-Parse-Application-Id': '48BkBrVWc2vgaWll9O6ktpdDS4SKQoJla55qCjPq',\r\n            'X-Parse-REST-API-Key': 'olOWe8T6CIAopabzFFs06fBqVMWQNu2C5eo8I35m',\r\n            'X-Parse-Revocable-Session': '1',\r\n            'X-Parse-Session-Token': token,\r\n        }\r\n    };\r\n\r\n    if (body) {\r\n        options.headers['Content-Type'] = 'application/json';\r\n        options.body = JSON.stringify(body);\r\n    }\r\n\r\n    return options;\r\n}\r\n\r\nexport async function getRequest(url) {\r\n    return await request(url, getOptions());\r\n}\r\n\r\nexport async function postRequest(url, data) {\r\n    return await request(url, getOptions('post', data));\r\n}\r\n\r\nexport async function putRequest(url, data) {\r\n    return await request(url, getOptions('put', data));\r\n}\r\n\r\nexport async function deleteRequest(url) {\r\n    return await request(url, getOptions('delete'));\r\n}\r\n\r\nexport async function login(username, password) {\r\n    try {\r\n        let user = await Parse.User.logIn(username, password);\r\n        const email = user.get('email');\r\n        if (user.get('emailVerified')) {\r\n            const currentUser = Parse.User.current();\r\n            const sessionToken = currentUser.getSessionToken();\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('authToken', sessionToken);\r\n            localStorage.setItem('userId', currentUser.id);\r\n            localStorage.setItem('email', email);\r\n        }\r\n    } catch (error) {\r\n        Parse.User.logOut();\r\n        console.log('User logged in. Please verify your email first');\r\n        // return notify(error);\r\n    }\r\n}\r\n\r\nexport async function register(username, email, password) {\r\n    const user = new Parse.User();\r\n    user.set('username', username);\r\n    user.set('email', email);\r\n    user.set('password', password);\r\n\r\n    try {\r\n        await user.signUp();\r\n        Parse.User.logOut();\r\n        localStorage.setItem('email', email);\r\n        alert(\"Email must be verified. Please, visit your mail inbox for further instructions.\");\r\n    } catch (error) {\r\n        alert(\"Ops, something went wrong: \" + error);\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport async function logout() {\r\n    try {\r\n        Parse.User.logOut();\r\n        alert('You\\'ve been logged out.');\r\n        localStorage.removeItem('username');\r\n        localStorage.removeItem('authToken');\r\n        localStorage.removeItem('userId');\r\n        localStorage.removeItem('email');\r\n    } catch (error) {\r\n        alert('Ops, something went wrong. Try again, please!');\r\n        console.error(error);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}